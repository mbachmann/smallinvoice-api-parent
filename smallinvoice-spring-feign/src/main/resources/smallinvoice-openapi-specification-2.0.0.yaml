openapi: 3.0.1
info:
  title: Smallinvoice API Reference
  description: >
    This document is meant to be use in combination with
    https://api.smallinvoice.com/v2/doc
  version: 2.0.0
servers:
  - url: '{server}/v2'
    description:  Smallinvoice API
    variables:
      server:
        default: https://api.smallinvoice.com
tags:
  - name: Auth
  - name: Catalog
  - name: Configuration
  - name: Contacts
  - name: Receivables
  - name: Reporting

paths:
  /auth/access-tokens:
    post:
      tags:
        - Auth
      summary: Receives token pair for Bearer authorization
      operationId: authAccessTokensPost
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthPOST'
            example:
              grant_type: client_credentials
              client_id: T1ZNOB7EO20G3OIB5JR4
              client_secret: 3FeuIQslNvr5GuDELXC1Qo/8H3lCCvnInGVFbwN3lhrLANYn9U1p1oP5Sz9wkhGsG9O25igj8Az6dBb7
              scope: "profile contact letter catalog invoice offer delivery_note order_confirmation project cost_unit working_hours activity effort contact_reminder configuration"
      responses:
        "201":
          description: Token pair
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenPairGET'
              example:
                token_type: "Bearer"
                expires_in: 43200
                access_token: "ACCESS_TOKEN_OF_USER"
                refresh_token: "REFRESH_TOKEN_OF_USER"

  /auth/owner:
    get:
      tags:
        - Auth
      summary: Returns data of authenticated resource owner
      description: Returns data of authenticated resource owner
      operationId: getAuthenticatedResourceOwner
      responses:
        200:
          description: Data of the authenticated resource owner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAuthOwnerGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ profile ]
  /auth/profile:
    get:
      tags:
        - Auth
      summary: Returns data of authenticated user's profile
      description: Returns data of authenticated user's profile
      operationId: getAuthUserProfile
      responses:
        200:
          description: Data of the authenticated user's profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemAuthProfileGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ profile ]
  /catalog/products/categories:
    get:
      tags:
        - Catalog
      summary: Returns list of product categories
      description: Returns list of product categories
      operationId: getCatalogProductCategories
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCategorySort'
      responses:
        200:
          description: Data of the requested product categories + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProductsCategories'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
    post:
      tags:
        - Catalog
      summary: Creates new product category
      description: Creates new product category
      operationId: createCatalogProductCategory
      requestBody:
        description: category JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CatalogCategoryPOST'
        required: true
      responses:
        201:
          description: Data of the created product category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogCategoryGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
      x-codegen-request-body-name: ""
  /catalog/services/categories:
    get:
      tags:
        - Catalog
      summary: Returns list of service categories
      description: Returns list of service categories
      operationId: getCatalogServiceCategories
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogCategorySort'
      responses:
        200:
          description: Data of the requested service categories + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServicesCategories'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
    post:
      tags:
        - Catalog
      summary: Creates new service category
      description: Creates new service category
      operationId: createCatalogServiceCategory
      requestBody:
        description: category JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CatalogCategoryPOST'
        required: true
      responses:
        201:
          description: Data of the created service category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogCategoryGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
      x-codegen-request-body-name: ""
  /catalog/products/categories/{categoryId}:
    get:
      tags:
        - Catalog
      summary: Returns data of specified product category
      description: Returns data of specified product category
      operationId: getCatalogProductCategory
      parameters:
        - name: categoryId
          in: path
          description: category ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested product category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogCategoryGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
    put:
      tags:
        - Catalog
      summary: Updates specified product category
      description: Updates specified product category
      operationId: updateCatalogProductCategory
      parameters:
        - name: categoryId
          in: path
          description: category ID
          required: true
          schema:
            type: integer
      requestBody:
        description: category JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CatalogCategoryPUT'
        required: true
      responses:
        200:
          description: Data of the updated product category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogCategoryGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
      x-codegen-request-body-name: ""
  /catalog/services/categories/{categoryId}:
    get:
      tags:
        - Catalog
      summary: Returns data of specified service category
      description: Returns data of specified service category
      operationId: getCatalogServiceCategory
      parameters:
        - name: categoryId
          in: path
          description: category ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested service category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogCategoryGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
    put:
      tags:
        - Catalog
      summary: Updates specified service category
      description: Updates specified service category
      operationId: updateCatalogServiceCategory
      parameters:
        - name: categoryId
          in: path
          description: category ID
          required: true
          schema:
            type: integer
      requestBody:
        description: category JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CatalogCategoryPUT'
        required: true
      responses:
        200:
          description: Data of the updated service category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogCategoryGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
      x-codegen-request-body-name: ""
  /catalog/products/categories/{categoryIds}:
    delete:
      tags:
        - Catalog
      summary: Deletes specified product categories
      description: Deletes specified product categories
      operationId: deleteCatalogProductCategories
      parameters:
        - name: categoryIds
          in: path
          description: comma separated category IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Categories successfully deleted
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
  /catalog/services/categories/{categoryIds}:
    delete:
      tags:
        - Catalog
      summary: Deletes specified service categories
      description: Deletes specified service categories
      operationId: deleteCatalogServiceCategories
      parameters:
        - name: categoryIds
          in: path
          description: comma separated category IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Categories successfully deleted
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
  /catalog/configuration/units:
    get:
      tags:
        - Catalog
      summary: Returns list of units
      description: Returns list of units
      operationId: getUnits
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogConfigurationUnitSort'

      responses:
        200:
          description: Data of the requested unit types + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCatalogConfigurationUnits'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
  /catalog/configuration/units/{unitId}:
    get:
      tags:
        - Catalog
      summary: Returns data of specified unit
      description: Returns data of specified unit
      operationId: getUnit
      parameters:
        - name: unitId
          in: path
          description: unit ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogConfigurationUnitGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
  /catalog/products:
    get:
      tags:
        - Catalog
      summary: Returns list of products
      description: Returns list of products
      operationId: GetCatalogProducts
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogProductSort'

      responses:
        200:
          description: Data of the requested products + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProducts'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
    post:
      tags:
        - Catalog
      summary: Creates new product
      description: Creates new product
      operationId: createCatalogProduct
      requestBody:
        description: product JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CatalogProductPOST'
        required: true
      responses:
        201:
          description: Data of the created product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogProductGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
      x-codegen-request-body-name: ""
  /catalog/products/{productId}:
    get:
      tags:
        - Catalog
      summary: Returns data of specified product
      description: Returns data of specified product
      operationId: getCatalogProduct
      parameters:
        - name: productId
          in: path
          description: product ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogProductGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
    put:
      tags:
        - Catalog
      summary: Updates specified product
      description: Updates specified product
      operationId: updateCatalogProduct
      parameters:
        - name: productId
          in: path
          description: product ID
          required: true
          schema:
            type: integer
      requestBody:
        description: product JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CatalogProductPUT'
        required: true
      responses:
        200:
          description: Data of the updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogProductGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
      x-codegen-request-body-name: ""
  /catalog/products/{productIds}:
    delete:
      tags:
        - Catalog
      summary: Deletes specified products
      description: Deletes specified products
      operationId: deleteCatalogProducts
      parameters:
        - name: productIds
          in: path
          description: comma separated product IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Products successfully deleted
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
  /catalog/services:
    get:
      tags:
        - Catalog
      summary: Returns list of services
      description: Returns list of services
      operationId: getCatalogServices
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CatalogServiceSort'

      responses:
        200:
          description: Data of the requested services + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListServices'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
    post:
      tags:
        - Catalog
      summary: Creates new service
      description: Creates new service
      operationId: createCatalogService
      requestBody:
        description: service JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CatalogServicePOST'
        required: true
      responses:
        201:
          description: Data of the created service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogServiceGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
      x-codegen-request-body-name: ""
  /catalog/services/{serviceId}:
    get:
      tags:
        - Catalog
      summary: Returns data of specified service
      description: Returns data of specified service
      operationId: getCatalogService
      parameters:
        - name: serviceId
          in: path
          description: service ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogServiceGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
    put:
      tags:
        - Catalog
      summary: Updates specified service
      description: Updates specified service
      operationId: updateCatalogService
      parameters:
        - name: serviceId
          in: path
          description: service ID
          required: true
          schema:
            type: integer
      requestBody:
        description: service JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CatalogServicePUT'
        required: true
      responses:
        200:
          description: Data of the updated service
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemCatalogServiceGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
      x-codegen-request-body-name: ""
  /catalog/services/{serviceIds}:
    delete:
      tags:
        - Catalog
      summary: Deletes specified services
      description: Deletes specified services
      operationId: deleteCatalogServices
      parameters:
        - name: serviceIds
          in: path
          description: comma separated service IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Services successfully deleted
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ catalog ]
  /configuration/bank-accounts:
    get:
      tags:
        - Configuration
      summary: Returns list of bank accounts
      description: Returns list of bank accounts
      operationId: getBankAccounts
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationBankAccountSort'

      responses:
        200:
          description: Data of the requested bank accounts + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationBankAccounts'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
    post:
      tags:
        - Configuration
      summary: Creates new bank account
      description: Creates new bank account
      operationId: createBankAccount
      requestBody:
        description: account JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConfigurationBankAccountPOST'
        required: true
      responses:
        201:
          description: Data of the created bank account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemConfigurationBankAccountGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
      x-codegen-request-body-name: ""
  /configuration/bank-accounts/{accountId}:
    get:
      tags:
        - Configuration
      summary: Returns data of specified bank account
      description: Returns data of specified bank account
      operationId: getBankAccount
      parameters:
        - name: accountId
          in: path
          description: account ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested bank account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemConfigurationBankAccountGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
    put:
      tags:
        - Configuration
      summary: Updates specified bank account
      description: Updates specified bank account
      operationId: updateBankAccount
      parameters:
        - name: accountId
          in: path
          description: account ID
          required: true
          schema:
            type: integer
      requestBody:
        description: account JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConfigurationBankAccountPUT'
        required: true
      responses:
        200:
          description: Data of the updated bank account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemConfigurationBankAccountGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
      x-codegen-request-body-name: ""
  /configuration/bank-accounts/{accountsIds}:
    delete:
      tags:
        - Configuration
      summary: Deletes specified bank accounts
      description: Deletes specified bank accounts
      operationId: deleteBankAccounts
      parameters:
        - name: accountsIds
          in: path
          description: comma separated IDs of accounts to be deleted
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Accounts successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
  /configuration/exchange-rates:
    get:
      tags:
        - Configuration
      summary: Returns list of currency exchange rates
      description: Returns list of currency exchange rates
      operationId: getCurrencyExchangeRates
      parameters:
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ConfigurationExchangeRateSort'

      responses:
        200:
          description: Data of the requested exchange rates + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListConfigurationExchangeRates'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
    post:
      tags:
        - Configuration
      summary: Creates new currency exchange rate
      description: Creates new currency exchange rate
      operationId: createCurrencyExchangeRate
      requestBody:
        description: currency exchange rate JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConfigurationExchangeRatePOST'
        required: true
      responses:
        201:
          description: Data of the created currency exchange
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemConfigurationExchangeRateGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
      x-codegen-request-body-name: ""
  /configuration/exchange-rates/{exchangeId}:
    get:
      tags:
        - Configuration
      summary: Returns data of specified currency exchange rate
      description: Returns data of specified currency exchange rate
      operationId: getCurrencyExchangeRate
      parameters:
        - name: exchangeId
          in: path
          description: exchange ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Data of the requested currency exchange rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemConfigurationExchangeRateGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
    put:
      tags:
        - Configuration
      summary: Updates specified currency exchange rate
      description: Updates specified currency exchange rate
      operationId: updateCurrencyExchangeRate
      parameters:
        - name: exchangeId
          in: path
          description: exchange rate ID
          required: true
          schema:
            type: integer
      requestBody:
        description: currency exchange rate JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ConfigurationExchangeRatePUT'
        required: true
      responses:
        200:
          description: Data of the updated currency exchange rate
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemConfigurationExchangeRateGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
      x-codegen-request-body-name: ""
  /configuration/exchange-rates/{exchangeIds}:
    delete:
      tags:
        - Configuration
      summary: Deletes specified currency exchange rates
      description: Deletes specified currency exchange rates
      operationId: deleteCurrencyExchangeRates
      parameters:
        - name: exchangeIds
          in: path
          description: comma separated IDs of currency exchange rates to be deleted
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Exchange rates successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
  /contacts/{contactId}/accounts:
    get:
      tags:
        - Contacts
      summary: Returns list of accounts for specified contact
      description: Returns list of accounts for specified contact
      operationId: getContactAccounts
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactAccountSort'

      responses:
        200:
          description: Data of the requested accounts + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactAccounts'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    post:
      tags:
        - Contacts
      summary: Creates new account for specified contact
      description: Creates new account for specified contact
      operationId: createContactAccount
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
      requestBody:
        description: account JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactAccountPOST'
        required: true
      responses:
        201:
          description: Data of the created account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactAccountGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/{contactId}/accounts/{accountId}:
    get:
      tags:
        - Contacts
      summary: Returns data of specified account
      description: Returns data of specified contact's account
      operationId: getContactAccount
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: accountId
          in: path
          description: account ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactAccountGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    put:
      tags:
        - Contacts
      summary: Updates specified account
      description: Updates specified contact's account
      operationId: updateContactAccount
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: accountId
          in: path
          description: account ID
          required: true
          schema:
            type: integer
      requestBody:
        description: account JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactAccountPUT'
        required: true
      responses:
        200:
          description: Data of the updated account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactAccountGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/{contactId}/accounts/{accountsIds}:
    delete:
      tags:
        - Contacts
      summary: Deletes specified accounts
      description: Deletes specified contact's accounts
      operationId: deleteContactAccount
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: accountsIds
          in: path
          description: accounts IDs (comma separated)
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Account successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
  /contacts/{contactId}/addresses:
    get:
      tags:
        - Contacts
      summary: Returns list of addresses for specified contact
      description: Returns list of addresses for specified contact
      operationId: getContactAddresses
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactAddressSort'

      responses:
        200:
          description: Data of the requested addresses + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactAddresses'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    post:
      tags:
        - Contacts
      summary: Creates new address for specified contact
      description: Creates new address for specified contact
      operationId: createContactAddress
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
      requestBody:
        description: address JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactAddressPOST'
        required: true
      responses:
        201:
          description: Data of the created address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactAddressGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/{contactId}/addresses/{addressId}:
    get:
      tags:
        - Contacts
      summary: Returns data of specified address
      description: Returns data of specified contact's address
      operationId: getContactAddress
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: addressId
          in: path
          description: address ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactAddressGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    put:
      tags:
        - Contacts
      summary: Updates specified address
      description: Updates specified contact's address
      operationId: updateContactAddress
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: addressId
          in: path
          description: address ID
          required: true
          schema:
            type: integer
      requestBody:
        description: address JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactAddressPUT'
        required: true
      responses:
        200:
          description: Data of the updated address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactAddressGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/{contactId}/addresses/{addressesIds}:
    delete:
      tags:
        - Contacts
      summary: Deletes specified addresses
      description: Deletes specified contact's addresses
      operationId: deleteContactAddresses
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: addressesIds
          in: path
          description: addresses IDs (comma separated)
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Address successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
  /contacts/configuration/groups:
    get:
      tags:
        - Contacts
      summary: Returns list of contact groups
      description: Returns list of contact groups
      operationId: getContactGroups
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactConfigurationGroupSort'

      responses:
        200:
          description: Data of the requested contact groups + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactConfigurationGroups'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    post:
      tags:
        - Contacts
      summary: Creates new contact group
      description: Creates new contact group
      operationId: createContactGroup
      requestBody:
        description: group JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactConfigurationGroupPOST'
        required: true
      responses:
        201:
          description: Data of the created contact group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactConfigurationGroupGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/configuration/groups/{groupId}:
    get:
      tags:
        - Contacts
      summary: Returns data of specified contact group
      description: Returns data of specified contact group
      operationId: getContactGroup
      parameters:
        - name: groupId
          in: path
          description: group ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested contact group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactConfigurationGroupGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    put:
      tags:
        - Contacts
      summary: Updates specified group
      description: Updates specified group
      operationId: updateContactGroup
      parameters:
        - name: groupId
          in: path
          description: group ID
          required: true
          schema:
            type: integer
      requestBody:
        description: group JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactConfigurationGroupPUT'
        required: true
      responses:
        200:
          description: Data of the updated group
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactConfigurationGroupGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/configuration/groups/{groupsIds}:
    delete:
      tags:
        - Contacts
      summary: Deletes specified groups
      description: Deletes specified groups
      operationId: deleteContactGroups
      parameters:
        - name: groupsIds
          in: path
          description: groups IDs (comma separated)
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Account successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
  /contacts:
    get:
      tags:
        - Contacts
      summary: Returns list of contacts
      description: Returns list of contacts
      operationId: getContacts
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactSort'

      responses:
        200:
          description: Data of the requested contacts + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContacts'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    post:
      tags:
        - Contacts
      summary: Creates new contact
      description: Creates new contact
      operationId: createContact
      requestBody:
        description: contact JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactPOST'
        required: true
      responses:
        201:
          description: Data of the created contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/{contactId}:
    get:
      tags:
        - Contacts
      summary: Returns data of specified contact
      description: Returns data of specified contact
      operationId: getContact
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    put:
      tags:
        - Contacts
      summary: Updates specified contact
      description: Updates specified contact
      operationId: updateContact
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
      requestBody:
        description: contact JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactPUT'
        required: true
      responses:
        200:
          description: Data of the updated contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/{contactIds}:
    delete:
      tags:
        - Contacts
      summary: Deletes specified contacts
      description: Deletes specified contacts
      operationId: deleteContacts
      parameters:
        - name: contactIds
          in: path
          description: comma separated contact IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Contacts successfully deleted
          content: {}
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
  /contacts/{contactId}/assign-groups/{groupsIds}:
    patch:
      tags:
        - Contacts
      summary: Assigns groups to specified contact
      description: Assigns groups to specified contact
      operationId: assignContactGroups
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: groupsIds
          in: path
          description: groups IDs (comma separated)
          required: true
          schema:
            type: string
      responses:
        200:
          description: Data of the changed contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
  /contacts/{contactId}/remove-groups/{groupsIds}:
    patch:
      tags:
        - Contacts
      summary: Removes groups from specified contact
      description: Removes groups from specified contact
      operationId: removeContactGroups
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: groupsIds
          in: path
          description: groups IDs (comma separated)
          required: true
          schema:
            type: string
      responses:
        200:
          description: Data of the changed contact
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
  /contacts/letters:
    get:
      tags:
        - Contacts
      summary: Returns list of letters
      description: Returns list of letters
      operationId: getLetters
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentLetterSort'

      responses:
        200:
          description: Data of the requested letters + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLetters'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
    post:
      tags:
        - Contacts
      summary: Creates new letter
      description: Creates new letter
      operationId: createLetter
      requestBody:
        description: letter JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentLetterPOST'
        required: true
      responses:
        201:
          description: Data of the created letter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentLetterGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        402:
          description: One of feature limits was reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response402'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
      x-codegen-request-body-name: ""
  /contacts/letters/{letterId}:
    get:
      tags:
        - Contacts
      summary: Returns data of specified letter
      description: Returns data of specified letter
      operationId: getLetter
      parameters:
        - name: letterId
          in: path
          description: letter ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested letter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentLetterGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
    put:
      tags:
        - Contacts
      summary: Updates specified letter
      description: Updates specified letter
      operationId: updateLetter
      parameters:
        - name: letterId
          in: path
          description: letter ID
          required: true
          schema:
            type: integer
      requestBody:
        description: letter JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentLetterPUT'
        required: true
      responses:
        200:
          description: Data of the updated letter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentLetterGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
      x-codegen-request-body-name: ""
  /contacts/letters/{letterId}/pdf:
    get:
      tags:
        - Contacts
      summary: Gets pdf of specified letter
      description: Gets pdf of specified letter
      operationId: getLetterPdf
      parameters:
        - name: letterId
          in: path
          description: letter ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: ok
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
  /contacts/letters/{letterId}/preview:
    get:
      tags:
        - Contacts
      summary: Gets preview of specified letter
      description: Gets preview of specified letter
      operationId: getLetterPreview
      parameters:
        - name: letterId
          in: path
          description: letter ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: page number [1 .. pages amount]
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: width in pixels
          schema:
            type: integer
            format: int32
            default: 972
            enum:
              - 240
              - 595
              - 600
              - 972
              - 1240
      responses:
        200:
          description: ok
          content:
            image/png:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
  /contacts/letters/{letterId}/change-status:
    patch:
      tags:
        - Contacts
      summary: Changes status of specified letter
      description: Changes status of specified letter
      operationId: changeLetterStatus
      parameters:
        - name: letterId
          in: path
          description: letter ID
          required: true
          schema:
            type: integer
      requestBody:
        description: change status JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentLetterChangeStatusPATCH'
        required: true
      responses:
        200:
          description: Data of the changed letter
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentLetterGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
      x-codegen-request-body-name: ""
  /contacts/letters/{letterId}/send-by-post:
    patch:
      tags:
        - Contacts
      summary: Sends specified letter by post
      description: Sends specified letter by post
      operationId: sendLetterByPost
      parameters:
        - name: letterId
          in: path
          description: letter ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentSendByPostPATCH'
        required: true
      responses:
        204:
          description: Letter successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
      x-codegen-request-body-name: ""
  /contacts/letters/{letterId}/send-by-email:
    patch:
      tags:
        - Contacts
      summary: Sends specified letter by email
      description: Sends specified letter by email
      operationId: sendLetterByEMail
      parameters:
        - name: letterId
          in: path
          description: letter ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentLetterSendByEmailPATCH'
        required: true
      responses:
        204:
          description: Letter successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
      x-codegen-request-body-name: ""
  /contacts/letters/{letterIds}:
    delete:
      tags:
        - Contacts
      summary: Deletes specified letters
      description: Deletes specified letters
      operationId: deleteLetters
      parameters:
        - name: letterIds
          in: path
          description: comma separated letter IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Letters successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ letter ]
  /contacts/{contactId}/people:
    get:
      tags:
        - Contacts
      summary: Returns list of people for specified contact
      description: Returns list of people for specified contact
      operationId: getContactPeoples
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactPeopleSort'

      responses:
        200:
          description: Data of the requested people + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactPeople'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    post:
      tags:
        - Contacts
      summary: Creates new person for specified contact
      description: Creates new person for specified contact
      operationId: createContactPeople
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
      requestBody:
        description: person JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactPeoplePOST'
        required: true
      responses:
        201:
          description: Data of the created person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactPeopleGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/{contactId}/people/{personId}:
    get:
      tags:
        - Contacts
      summary: Returns data of specified person
      description: Returns data of specified contact's person
      operationId: getContactPeople
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: personId
          in: path
          description: person ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactPeopleGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
    put:
      tags:
        - Contacts
      summary: Updates specified person
      description: Updates specified contact's person
      operationId: updateContactPeople
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: personId
          in: path
          description: person ID
          required: true
          schema:
            type: integer
      requestBody:
        description: person JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactPeoplePUT'
        required: true
      responses:
        200:
          description: Data of the updated person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactPeopleGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
      x-codegen-request-body-name: ""
  /contacts/{contactId}/people/{peopleIds}:
    delete:
      tags:
        - Contacts
      summary: Deletes specified people
      description: Deletes specified contact's people
      operationId: deleteContactPeople
      parameters:
        - name: contactId
          in: path
          description: contact ID
          required: true
          schema:
            type: integer
        - name: peopleIds
          in: path
          description: people IDs (comma separated)
          required: true
          schema:
            type: string
      responses:
        204:
          description: People successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ contact ]
  /contacts/reminders:
    get:
      tags:
        - Contacts
      summary: Returns list of reminders
      description: Returns list of reminders
      operationId: getReminders
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ContactReminderSort'

      responses:
        200:
          description: Data of the requested reminders + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListContactReminders'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ reminder ]
    post:
      tags:
        - Contacts
      summary: Creates new reminder
      description: Creates new reminder
      operationId: createReminder
      requestBody:
        description: reminder JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactReminderPOST'
        required: true
      responses:
        201:
          description: Data of the created reminder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactReminderGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ reminder ]
      x-codegen-request-body-name: ""
  /contacts/reminders/{reminderId}:
    get:
      tags:
        - Contacts
      summary: Returns data of specified reminder
      description: Returns data of specified reminder
      operationId: getReminder
      parameters:
        - name: reminderId
          in: path
          description: reminder ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested reminder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactReminderGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ reminder ]
    put:
      tags:
        - Contacts
      summary: Updates specified reminder
      description: Updates specified reminder
      operationId: updateReminder
      parameters:
        - name: reminderId
          in: path
          description: reminder ID
          required: true
          schema:
            type: integer
      requestBody:
        description: reminder JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ContactReminderPUT'
        required: true
      responses:
        200:
          description: Data of the updated reminder
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemContactReminderGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ reminder ]
      x-codegen-request-body-name: ""
  /contacts/reminders/{reminderIds}:
    delete:
      tags:
        - Contacts
      summary: Deletes reminders
      description: Deletes specified reminders
      operationId: deleteReminders
      parameters:
        - name: reminderIds
          in: path
          description: reminders IDs (comma separated)
          required: true
          schema:
            type: string
      responses:
        204:
          description: Reminders successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ reminder ]
  /receivables/configuration/isrs:
    get:
      tags:
        - Receivables
      summary: Returns list of ISRs
      description: Returns list of ISRs
      operationId: GetIsrs
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReceivablesConfigurationIsrSort'

      responses:
        200:
          description: Data of the requested ISRs + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReceivablesConfigurationIsrs'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
  /receivables/configuration/isrs/{isrId}:
    get:
      tags:
        - Receivables
      summary: Returns data of specified ISR
      description: Returns data of specified ISR
      operationId: getIsr
      parameters:
        - name: isrId
          in: path
          description: ISR ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested ISR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReceivablesConfigurationIsrGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ configuration ]
  /receivables/delivery-notes:
    get:
      tags:
        - Receivables
      summary: Returns list of delivery notes
      description: Returns list of delivery notes
      operationId: getDeliveryNotes
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentDeliveryNoteSort'

      responses:
        200:
          description: Data of the requested delivery notes + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDeliveryNotes'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
    post:
      tags:
        - Receivables
      summary: Creates new delivery note
      description: Creates new delivery note
      operationId: createDeliveryNote
      requestBody:
        description: delivery note JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentDeliveryNotePOST'
        required: true
      responses:
        201:
          description: Data of the created delivery note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentDeliveryNoteGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        402:
          description: One of feature limits was reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response402'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
      x-codegen-request-body-name: ""
  /receivables/delivery-notes/{deliveryNoteId}:
    get:
      tags:
        - Receivables
      summary: Returns data of specified delivery note
      description: Returns data of specified delivery note
      operationId: getDeliveryNote
      parameters:
        - name: deliveryNoteId
          in: path
          description: delivery note ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested delivery note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentDeliveryNoteGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
    put:
      tags:
        - Receivables
      summary: Updates specified delivery note
      description: Updates specified delivery note
      operationId: updateDeliveryNote
      parameters:
        - name: deliveryNoteId
          in: path
          description: delivery note ID
          required: true
          schema:
            type: integer
      requestBody:
        description: delivery note JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentDeliveryNotePUT'
        required: true
      responses:
        200:
          description: Data of the updated delivery note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentDeliveryNoteGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
      x-codegen-request-body-name: ""
  /receivables/delivery-notes/{deliveryNoteId}/pdf:
    get:
      tags:
        - Receivables
      summary: Gets pdf of specified delivery note
      description: Gets pdf of specified delivery note
      operationId: getDeliveryNotePdf
      parameters:
        - name: deliveryNoteId
          in: path
          description: delivery note ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: ok
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
  /receivables/delivery-notes/{deliveryNoteId}/preview:
    get:
      tags:
        - Receivables
      summary: Gets preview of specified delivery note
      description: Gets preview of specified delivery note
      operationId: getDeliveryNotePreview
      parameters:
        - name: deliveryNoteId
          in: path
          description: delivery note ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: page number [1 .. pages amount]
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: width in pixels
          schema:
            type: integer
            format: int32
            default: 972
            enum:
              - 240
              - 595
              - 600
              - 972
              - 1240
      responses:
        200:
          description: ok
          content:
            image/png:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
  /receivables/delivery-notes/{deliveryNoteId}/change-status:
    patch:
      tags:
        - Receivables
      summary: Changes status of specified delivery note
      description: Changes status of specified delivery note
      operationId: changeDeliveryNoteStatus
      parameters:
        - name: deliveryNoteId
          in: path
          description: delivery note ID
          required: true
          schema:
            type: integer
      requestBody:
        description: change status JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentDeliveryNoteChangeStatusPATCH'
        required: true
      responses:
        200:
          description: Data of the changed delivery note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentDeliveryNoteGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
      x-codegen-request-body-name: ""
  /receivables/delivery-notes/{deliveryNoteId}/send-by-post:
    patch:
      tags:
        - Receivables
      summary: Sends specified delivery note by post
      description: Sends specified delivery note by post
      operationId: sendDeliveryNoteByPost
      parameters:
        - name: deliveryNoteId
          in: path
          description: delivery note ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentSendByPostPATCH'
        required: true
      responses:
        204:
          description: Delivery note successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
      x-codegen-request-body-name: ""
  /receivables/delivery-notes/{deliveryNoteId}/send-by-email:
    patch:
      tags:
        - Receivables
      summary: Sends specified delivery note by email
      description: Sends specified delivery note by email
      operationId: sendDeliveryNoteByEMail
      parameters:
        - name: deliveryNoteId
          in: path
          description: delivery note ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentDeliveryNoteSendByEmailPATCH'
        required: true
      responses:
        204:
          description: Delivery note successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
      x-codegen-request-body-name: ""
  /receivables/delivery-notes/{deliveryNoteIds}:
    delete:
      tags:
        - Receivables
      summary: Deletes specified delivery notes
      description: Deletes specified delivery notes
      operationId: deleteDeliveryNotes
      parameters:
        - name: deliveryNoteIds
          in: path
          description: comma separated delivery note IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Delivery notes successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ delivery_note ]
  /receivables/invoices:
    get:
      tags:
        - Receivables
      summary: Returns list of invoices
      description: Returns list of invoices
      operationId: getInvoices
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentInvoiceStandardSort'

      responses:
        200:
          description: Data of the requested invoices + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListInvoicesStandard'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
    post:
      tags:
        - Receivables
      summary: Creates new invoice
      description: Creates new invoice
      operationId: createInvoice
      requestBody:
        description: invoice JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentInvoiceStandardPOST'
        required: true
      responses:
        201:
          description: Data of the created invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentInvoiceStandardGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        402:
          description: One of feature limits was reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response402'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
      x-codegen-request-body-name: ""
  /receivables/invoices/{invoiceId}:
    get:
      tags:
        - Receivables
      summary: Returns data of specified invoice
      description: Returns data of specified invoice
      operationId: getInvoice
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentInvoiceStandardGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
    put:
      tags:
        - Receivables
      summary: Updates specified invoice
      description: Updates specified invoice
      operationId: updateInvoice
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
      requestBody:
        description: invoice JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentInvoiceStandardPUT'
        required: true
      responses:
        200:
          description: Data of the updated invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentInvoiceStandardGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
      x-codegen-request-body-name: ""
  /receivables/invoices/{invoiceId}/pdf:
    get:
      tags:
        - Receivables
      summary: Gets pdf of specified invoice
      description: Gets pdf of specified invoice
      operationId: getInvoicePdf
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
        - name: options
          in: query
          description: pdf options JSON
          schema: {}
      responses:
        200:
          description: ok
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        400:
          description: Bad request
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
  /receivables/invoices/{invoiceId}/preview:
    get:
      tags:
        - Receivables
      summary: Gets preview of specified invoice
      description: Gets preview of specified invoice
      operationId: getInvoicePreview
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: page number [1 .. pages amount]
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: width in pixels
          schema:
            type: integer
            format: int32
            default: 972
            enum:
              - 240
              - 595
              - 600
              - 972
              - 1240
      responses:
        200:
          description: ok
          content:
            image/png:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
  /receivables/invoices/{invoiceId}/change-status:
    patch:
      tags:
        - Receivables
      summary: Changes status of specified invoice
      description: Changes status of specified invoice
      operationId: changeInvoiceStatus
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
      requestBody:
        description: change status JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentInvoiceStandardChangeStatusPATCH'
        required: true
      responses:
        200:
          description: Data of the changed invoice
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentInvoiceStandardGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
      x-codegen-request-body-name: ""
  /receivables/invoices/{invoiceId}/send-by-post:
    patch:
      tags:
        - Receivables
      summary: Sends specified invoice by post
      description: Sends specified invoice by post
      operationId: sendInvoiceByPost
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentSendByPostPATCH'
        required: true
      responses:
        204:
          description: Invoice successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
      x-codegen-request-body-name: ""
  /receivables/invoices/{invoiceId}/send-by-email:
    patch:
      tags:
        - Receivables
      summary: Sends specified invoice by email
      description: Sends specified invoice by email
      operationId: sendInvoiceByEMail
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentInvoiceSendByEmailPATCH'
        required: true
      responses:
        204:
          description: Invoice successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
      x-codegen-request-body-name: ""
  /receivables/invoices/{invoiceIds}:
    delete:
      tags:
        - Receivables
      summary: Deletes specified invoices
      description: Deletes specified invoices
      operationId: deleteInvoices
      parameters:
        - name: invoiceIds
          in: path
          description: comma separated invoice IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Invoices successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
  /receivables/offers:
    get:
      tags:
        - Receivables
      summary: Returns list of offers
      description: Returns list of offers
      operationId: getOffers
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentOfferSort'

      responses:
        200:
          description: Data of the requested offers + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOffers'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
    post:
      tags:
        - Receivables
      summary: Creates new offer
      description: Creates new offer
      operationId: createOffer
      requestBody:
        description: offer JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentOfferPOST'
        required: true
      responses:
        201:
          description: Data of the created offer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentOfferGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        402:
          description: One of feature limits was reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response402'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
      x-codegen-request-body-name: ""
  /receivables/offers/{offerId}:
    get:
      tags:
        - Receivables
      summary: Returns data of specified offer
      description: Returns data of specified offer
      operationId: getOffer
      parameters:
        - name: offerId
          in: path
          description: offer ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested offer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentOfferGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
    put:
      tags:
        - Receivables
      summary: Updates specified offer
      description: Updates specified offer
      operationId: updateOffer
      parameters:
        - name: offerId
          in: path
          description: offer ID
          required: true
          schema:
            type: integer
      requestBody:
        description: offer JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentOfferPUT'
        required: true
      responses:
        200:
          description: Data of the updated offer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentOfferGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
      x-codegen-request-body-name: ""
  /receivables/offers/{offerId}/pdf:
    get:
      tags:
        - Receivables
      summary: Gets pdf of specified offer
      description: Gets pdf of specified offer
      operationId: getOfferPdf
      parameters:
        - name: offerId
          in: path
          description: offer ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: ok
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
  /receivables/offers/{offerId}/preview:
    get:
      tags:
        - Receivables
      summary: Gets preview of specified offer
      description: Gets preview of specified offer
      operationId: getOfferPreview
      parameters:
        - name: offerId
          in: path
          description: offer ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: page number [1 .. pages amount]
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: width in pixels
          schema:
            type: integer
            format: int32
            default: 972
            enum:
              - 240
              - 595
              - 600
              - 972
              - 1240
      responses:
        200:
          description: ok
          content:
            image/png:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
  /receivables/offers/{offerId}/change-status:
    patch:
      tags:
        - Receivables
      summary: Changes status of specified offer
      description: Changes status of specified offer
      operationId: changeOfferStatus
      parameters:
        - name: offerId
          in: path
          description: offer ID
          required: true
          schema:
            type: integer
      requestBody:
        description: change status JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentOfferChangeStatusPATCH'
        required: true
      responses:
        200:
          description: Data of the changed offer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentOfferGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
      x-codegen-request-body-name: ""
  /receivables/offers/{offerId}/send-by-post:
    patch:
      tags:
        - Receivables
      summary: Sends specified offer by post
      description: Sends specified offer by post
      operationId: sendOfferByPost
      parameters:
        - name: offerId
          in: path
          description: offer ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentSendByPostPATCH'
        required: true
      responses:
        204:
          description: Offer successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
      x-codegen-request-body-name: ""
  /receivables/offers/{offerId}/send-by-email:
    patch:
      tags:
        - Receivables
      summary: Sends specified offer by email
      description: Sends specified offer by email
      operationId: sendOfferByEMail
      parameters:
        - name: offerId
          in: path
          description: offer ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentOfferSendByEmailPATCH'
        required: true
      responses:
        204:
          description: Offer successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
      x-codegen-request-body-name: ""
  /receivables/offers/{offerIds}:
    delete:
      tags:
        - Receivables
      summary: Deletes specified offers
      description: Deletes specified offers
      operationId: deleteOffers
      parameters:
        - name: offerIds
          in: path
          description: comma separated offer IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Offers successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ offer ]
  /receivables/order-confirmations:
    get:
      tags:
        - Receivables
      summary: Returns list of order confirmations
      description: Returns list of order confirmations
      operationId: getOrderConfirmations
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentOrderConfirmationSort'

      responses:
        200:
          description: Data of the requested order confirmations + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOrderConfirmations'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
    post:
      tags:
        - Receivables
      summary: Creates new order confirmation
      description: Creates new order confirmation
      operationId: createOrderConfirmation
      requestBody:
        description: order confirmation JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentOrderConfirmationPOST'
        required: true
      responses:
        201:
          description: Data of the created order confirmation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentOrderConfirmationGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        402:
          description: One of feature limits was reached
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response402'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
      x-codegen-request-body-name: ""
  /receivables/order-confirmations/{orderConfirmationId}:
    get:
      tags:
        - Receivables
      summary: Returns data of specified order confirmation
      description: Returns data of specified order confirmation
      operationId: getOrderConfirmation
      parameters:
        - name: orderConfirmationId
          in: path
          description: order confirmation ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested order confirmation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentOrderConfirmationGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
    put:
      tags:
        - Receivables
      summary: Updates specified order confirmation
      description: Updates specified order confirmation
      operationId: updateOrderConfirmation
      parameters:
        - name: orderConfirmationId
          in: path
          description: order confirmation ID
          required: true
          schema:
            type: integer
      requestBody:
        description: order confirmation JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentOrderConfirmationPUT'
        required: true
      responses:
        200:
          description: Data of the updated order confirmation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentOrderConfirmationGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
      x-codegen-request-body-name: ""
  /receivables/order-confirmations/{orderConfirmationId}/pdf:
    get:
      tags:
        - Receivables
      summary: Gets pdf of specified order confirmation
      description: Gets pdf of specified order confirmation
      operationId: getOrderConfirmationPdf
      parameters:
        - name: orderConfirmationId
          in: path
          description: order confirmation ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: ok
          content:
            application/pdf:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/pdf:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
  /receivables/order-confirmations/{orderConfirmationId}/preview:
    get:
      tags:
        - Receivables
      summary: Gets preview of specified order confirmation
      description: Gets preview of specified order confirmation
      operationId: getOrderConfirmationPreview
      parameters:
        - name: orderConfirmationId
          in: path
          description: order confirmation ID
          required: true
          schema:
            type: integer
        - name: page
          in: query
          description: page number [1 .. pages amount]
          schema:
            type: integer
            format: int32
            default: 1
        - name: size
          in: query
          description: width in pixels
          schema:
            type: integer
            format: int32
            default: 972
            enum:
              - 240
              - 595
              - 600
              - 972
              - 1240
      responses:
        200:
          description: ok
          content:
            image/png:
              schema:
                type: string
                format: binary
        401:
          description: Unauthorized
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            image/png:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
  /receivables/order-confirmations/{orderConfirmationId}/change-status:
    patch:
      tags:
        - Receivables
      summary: Changes status of specified order confirmation
      description: Changes status of specified order confirmation
      operationId: changeOrderConfirmationStatus
      parameters:
        - name: orderConfirmationId
          in: path
          description: order confirmation ID
          required: true
          schema:
            type: integer
      requestBody:
        description: change status JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentOrderConfirmationChangeStatusPATCH'
        required: true
      responses:
        200:
          description: Data of the changed order confirmation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentOrderConfirmationGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
      x-codegen-request-body-name: ""
  /receivables/order-confirmations/{orderConfirmationId}/send-by-post:
    patch:
      tags:
        - Receivables
      summary: Sends specified order confirmation by post
      description: Sends specified order confirmation by post
      operationId: sendOrderConfirmationByPost
      parameters:
        - name: orderConfirmationId
          in: path
          description: order confirmation ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentSendByPostPATCH'
        required: true
      responses:
        204:
          description: Order confirmation successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
      x-codegen-request-body-name: ""
  /receivables/order-confirmations/{orderConfirmationId}/send-by-email:
    patch:
      tags:
        - Receivables
      summary: Sends specified order confirmation by email
      description: Sends specified order confirmation by email
      operationId: sendOrderConfirmationByEMail
      parameters:
        - name: orderConfirmationId
          in: path
          description: order confirmation ID
          required: true
          schema:
            type: integer
      requestBody:
        description: sending JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentOrderConfirmationSendByEmailPATCH'
        required: true
      responses:
        204:
          description: Order confirmation successfully sent
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
      x-codegen-request-body-name: ""
  /receivables/order-confirmations/{orderConfirmationIds}:
    delete:
      tags:
        - Receivables
      summary: Deletes specified order confirmations
      description: Deletes specified order confirmations
      operationId: deleteOrderConfirmations
      parameters:
        - name: orderConfirmationIds
          in: path
          description: comma separated order confirmation IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Order confirmations successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ order_confirmation ]
  /receivables/invoices/{invoiceId}/payments:
    get:
      tags:
        - Receivables
      summary: Returns list of payments for specified invoice
      description: Returns list of payments for specified invoice
      operationId: getInvoicePayments
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DocumentInvoicePaymentSort'

      responses:
        200:
          description: Data of the requested payments + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListDocumentInvoicePayments'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
    post:
      tags:
        - Receivables
      summary: Creates new payment for specified invoice
      description: Creates new payment for specified invoice
      operationId: createInvoicePayment
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
      requestBody:
        description: payment JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentInvoicePaymentPOST'
        required: true
      responses:
        201:
          description: Data of the created payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentInvoicePaymentGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
      x-codegen-request-body-name: ""
  /receivables/invoices/{invoiceId}/payments/{paymentId}:
    get:
      tags:
        - Receivables
      summary: Returns data of specified invoice's payment
      description: Returns data of specified invoice's payment
      operationId: getInvoicePayment
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
        - name: paymentId
          in: path
          description: payment ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentInvoicePaymentGET'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
    put:
      tags:
        - Receivables
      summary: Updates specified invoice's payment
      description: Updates specified invoice's payment
      operationId: updateInvoicePayment
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
        - name: paymentId
          in: path
          description: payment ID
          required: true
          schema:
            type: integer
      requestBody:
        description: payment JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/DocumentInvoicePaymentPUT'
        required: true
      responses:
        200:
          description: Data of the updated payment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemDocumentInvoicePaymentGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ invoice ]
      x-codegen-request-body-name: ""
  /receivables/invoices/{invoiceId}/payments/{paymentIds}:
    delete:
      tags:
        - Receivables
      summary: Deletes specified invoice's payments
      description: Deletes specified invoice's payments
      operationId: deleteInvoicePayment
      parameters:
        - name: invoiceId
          in: path
          description: invoice ID
          required: true
          schema:
            type: integer
        - name: paymentIds
          in: path
          description: payment IDs (comma separated)
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Payments successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ activity ]
  /reporting/activities:
    get:
      tags:
        - Reporting
      summary: Returns list of activities entries
      description: Returns list of activities entries
      operationId: getActivities
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ActivitySort'

      responses:
        200:
          description: Data of the requested activities entries + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportingActivities'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ activity ]
  /reporting/activities/{activityId}:
    get:
      tags:
        - Reporting
      summary: Returns data of specified activity entry
      description: Returns data of specified activity entry
      operationId: getActivity
      parameters:
        - name: activityId
          in: path
          description: activity ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested activity entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemActivityGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ activity ]
  /reporting/cost-units:
    get:
      tags:
        - Reporting
      summary: Returns list of cost units
      description: Returns list of cost units
      operationId: getCostUnits
      parameters:
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportingCostUnitSort'
      responses:
        200:
          description: Data of the requested cost units + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportingCostUnits'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ cost_unit ]
    post:
      tags:
        - Reporting
      summary: Creates new cost unit
      description: Creates new cost unit
      operationId: createCostUnit
      requestBody:
        description: cost unit JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReportingCostUnitPOST'
        required: true
      responses:
        201:
          description: Data of the created cost unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingCostUnitGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ cost_unit ]
      x-codegen-request-body-name: ""
  /reporting/cost-units/{costUnitId}:
    get:
      tags:
        - Reporting
      summary: Returns data of specified cost unit
      description: Returns data of specified cost unit
      operationId: getCostUnit
      parameters:
        - name: costUnitId
          in: path
          description: cost unit ID
          required: true
          schema:
            type: integer
      responses:
        200:
          description: Data of the requested cost unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingCostUnitGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ cost_unit ]
    put:
      tags:
        - Reporting
      summary: Updates specified cost unit
      description: Updates specified cost unit
      operationId: updateCostUnit
      parameters:
        - name: costUnitId
          in: path
          description: cost unit ID
          required: true
          schema:
            type: integer
      requestBody:
        description: cost unit JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReportingCostUnitPUT'
        required: true
      responses:
        200:
          description: Data of the updated cost unit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingCostUnitGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ cost_unit ]
      x-codegen-request-body-name: ""
  /reporting/cost-units/{costUnitsIds}:
    delete:
      tags:
        - Reporting
      summary: Deletes specified cost units
      description: Deletes specified cost units
      operationId: deleteCostUnits
      parameters:
        - name: costUnitsIds
          in: path
          description: comma separated cost unit IDs
          required: true
          schema:
            type: integer
      responses:
        204:
          description: cost units successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ cost_unit ]
  /reporting/efforts:
    get:
      tags:
        - Reporting
      summary: Returns list of efforts
      description: Returns list of efforts
      operationId: getEfforts
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportingEffortSort'

      responses:
        200:
          description: Data of the requested efforts + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportingEfforts'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ effort ]
    post:
      tags:
        - Reporting
      summary: Creates new effort
      description: Creates new effort
      operationId: createEffort
      requestBody:
        description: effort JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReportingEffortPOST'
        required: true
      responses:
        201:
          description: Data of the created effort
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingEffortGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ effort ]
      x-codegen-request-body-name: ""
  /reporting/efforts/{effortId}:
    get:
      tags:
        - Reporting
      summary: Returns data of specified effort
      description: Returns data of specified effort
      operationId: getEffort
      parameters:
        - name: effortId
          in: path
          description: effort ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested effort
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingEffortGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ effort ]
    put:
      tags:
        - Reporting
      summary: Updates specified effort
      description: Updates specified effort
      operationId: updateEffort
      parameters:
        - name: effortId
          in: path
          description: effort ID
          required: true
          schema:
            type: integer
      requestBody:
        description: effort JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReportingEffortPUT'
        required: true
      responses:
        200:
          description: Data of the updated effort
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingEffortGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ effort ]
      x-codegen-request-body-name: ""
  /reporting/efforts/{effortIds}:
    delete:
      tags:
        - Reporting
      summary: Deletes specified efforts
      description: Deletes specified efforts
      operationId: deleteEfforts
      parameters:
        - name: effortIds
          in: path
          description: efforts IDs (comma separated)
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Effort successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ effort ]
  /reporting/projects:
    get:
      tags:
        - Reporting
      summary: Returns list of projects
      description: Returns list of projects
      operationId: getProjects
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ReportingProjectSort'

      responses:
        200:
          description: Data of the requested projects + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportingProjects'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ project ]
    post:
      tags:
        - Reporting
      summary: Creates new project
      description: Creates new project
      operationId: createProject
      requestBody:
        description: project JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReportingProjectPOST'
        required: true
      responses:
        201:
          description: Data of the created project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingProjectGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ project ]
      x-codegen-request-body-name: ""
  /reporting/projects/{projectId}:
    get:
      tags:
        - Reporting
      summary: Returns data of specified project
      description: Returns data of specified project
      operationId: getProject
      parameters:
        - name: projectId
          in: path
          description: project ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingProjectGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ project ]
    put:
      tags:
        - Reporting
      summary: Updates specified project
      description: Updates specified project
      operationId: updateProject
      parameters:
        - name: projectId
          in: path
          description: project ID
          required: true
          schema:
            type: integer
      requestBody:
        description: project JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ReportingProjectPUT'
        required: true
      responses:
        200:
          description: Data of the updated project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingProjectGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ project ]
      x-codegen-request-body-name: ""
  /reporting/projects/{projectId}/change-status/{status}:
    patch:
      tags:
        - Reporting
      summary: Updates status for specified project
      description: Updates status for specified project
      operationId: changeProjectStatus
      parameters:
        - name: projectId
          in: path
          description: project ID
          required: true
          schema:
            type: integer
        - name: status
          in: path
          description: >
             status to be set, on of:
             * 'O' - open
             * 'C' - closed
             * 'B' - billed
             * 'P' - pending
          required: true
          schema:
            type: string
            enum:
              - O
              - C
              - B
              - P

      responses:
        200:
          description: Data of the changed project
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemReportingProjectGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ project ]
  /reporting/projects/{projectIds}:
    delete:
      tags:
        - Reporting
      summary: Deletes specified projects
      description: Deletes specified projects
      operationId: deleteProjects
      parameters:
        - name: projectIds
          in: path
          description: projects IDs (comma separated)
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Project successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ project ]
  /reporting/working-hours:
    get:
      tags:
        - Reporting
      summary: Returns list of working hours entries
      description: Returns list of working hours entries
      operationId: getWorkingHours
      parameters:
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
        - name: q
          in: query
          description: Value for full text search
          schema:
            type: string
        - name: filter
          in: query
          description: Filter expression (JSON)
          schema:
            type: string
        - name: limit
          in: query
          description: Limits the number of items returned. Number in a range [1-200]
          schema:
            type: integer
            format: int32
            default: 100
        - name: offset
          in: query
          description: 'Offset of the first item to return. The offset of the initial
          item is 0. '
          schema:
            type: integer
            format: int32
            default: 0
        - name: sort
          in: query
          description: 'Sorting expression. Key or comma separated keys. Key preceded with minus (-) means descending.'
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/WorkingHoursSort'

      responses:
        200:
          description: Data of the requested working hours entries + pagination
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListWorkingHours'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ working_hours ]
    post:
      tags:
        - Reporting
      summary: Creates new working hours entry
      description: Creates new working hours entry
      operationId: createWorkingHour
      requestBody:
        description: working hours JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/WorkingHoursPOST'
        required: true
      responses:
        201:
          description: Data of the created working hours entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemWorkingHoursGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ working_hours ]
      x-codegen-request-body-name: ""
  /reporting/working-hours/{timeId}:
    get:
      tags:
        - Reporting
      summary: Returns data of specified working hours entry
      description: Returns data of specified working hours entry
      operationId: getWorkingHour
      parameters:
        - name: timeId
          in: path
          description: working hours ID
          required: true
          schema:
            type: integer
        - name: with
          in: query
          description: Comma separated, optional keys that should be included in the
            response.
          schema:
            type: string
      responses:
        200:
          description: Data of the requested working hours entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemWorkingHoursGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ working_hours ]
    put:
      tags:
        - Reporting
      summary: Updates specified working hours entry
      description: Updates specified working hours entry
      operationId: updateWorkingHour
      parameters:
        - name: timeId
          in: path
          description: working hours ID
          required: true
          schema:
            type: integer
      requestBody:
        description: working hours JSON data
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/WorkingHoursPUT'
        required: true
      responses:
        200:
          description: Data of the updated working hours entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemWorkingHoursGET'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        422:
          description: Validation errors
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response422'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ working_hours ]
      x-codegen-request-body-name: ""
  /reporting/working-hours/{timeIds}:
    delete:
      tags:
        - Reporting
      summary: Deletes specified working hours entries
      description: Deletes specified working hours entries
      operationId: deleteWorkingHours
      parameters:
        - name: timeIds
          in: path
          description: working hours IDs (comma separated)
          required: true
          schema:
            type: string
      responses:
        204:
          description: Working hours entries successfully deleted
          content: {}
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        401:
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response401'
        403:
          description: No permissions for specified entity (no response body) OR feature
            is missing (with response body)
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response403'
        404:
          description: Entity not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response404'
        405:
          description: Method not allowed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        429:
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response4xx'
        500:
          description: Server error
          content: {}
      security:
        - bearerAuth: [ ]
        - oauth: [ working_hours ]
components:
  schemas:
    AuthPOST:
      description: Request for authentication
      type: object
      required:
        - grant_type
        - client_id
        - client_secret
        - scope
      properties:
        grant_type:
          type: string
          enum:
            - client_credentials
            - refresh_token
          default: "client_credentials"
        client_id:
          description: Client id provided by smallinvoice when registering new client
          type: string
        client_secret:
          description: Client secret provided by smallinvoice when registering new client
          type: string
        scope:
          description: |
            Scopes separated by space.
            Avalilable scopes(scopes to be utilized in requests are in written in small letters):
            profile (Profile),  contact (Contacts)
            contact_reminder (Reminders), letter (Letters),
            configuration (Settings), catalog (Catalog),
            invoice (Invoices), offer (Offers)
            delivery_note (Delivery notes)
            order_confirmation (Order confirmations), project (Projects)
            cost_unit (Cost units), working_hours (Working hours),
            activity (Activities), effort (Efforts)
        refresh_token:
          description: Refresh token when grant_type property value is set to 'refresh_token'

    TokenPairGET:
      description: Token pair returned after authentication
      required:
        - token_type
        - expires_in
        - access_token
        - refresh_token
      properties:
        token_type:
          type: string
        expires_in:
          type: integer
          format: int32
        access_token:
          type: string
        refresh_token:
          type: string

    ItemAuthOwnerGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/AuthOwnerGET'
    ItemAuthProfileGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/AuthProfileGET'
    ListProductsCategories:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of CatalogCategoryGET objects
              items:
                $ref: '#/components/schemas/CatalogCategoryGET'
    ListServicesCategories:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of CatalogCategoryGET objects
              items:
                $ref: '#/components/schemas/CatalogCategoryGET'
    ItemCatalogCategoryGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/CatalogCategoryGET'
    ListCatalogConfigurationUnits:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of CatalogConfigurationUnitGET objects
              items:
                $ref: '#/components/schemas/CatalogConfigurationUnitGET'
    ItemCatalogConfigurationUnitGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/CatalogConfigurationUnitGET'
    ListProducts:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of CatalogProductGET objects
              items:
                $ref: '#/components/schemas/CatalogProductGET'
    ItemCatalogProductGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/CatalogProductGET'
    ListServices:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of CatalogServiceGET objects
              items:
                $ref: '#/components/schemas/CatalogServiceGET'
    ItemCatalogServiceGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/CatalogServiceGET'
    ListConfigurationBankAccounts:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ConfigurationBankAccountGET objects
              items:
                $ref: '#/components/schemas/ConfigurationBankAccountGET'
    ItemConfigurationBankAccountGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ConfigurationBankAccountGET'
    ListConfigurationExchangeRates:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ConfigurationExchangeRateGET objects
              items:
                $ref: '#/components/schemas/ConfigurationExchangeRateGET'
    ItemConfigurationExchangeRateGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ConfigurationExchangeRateGET'
    ListContactAccounts:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ContactAccountGET objects
              items:
                $ref: '#/components/schemas/ContactAccountGET'
    ItemContactAccountGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ContactAccountGET'
    ListContactAddresses:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ContactAddressGET objects
              items:
                $ref: '#/components/schemas/ContactAddressGET'
    ItemContactAddressGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ContactAddressGET'
    ListContactConfigurationGroups:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ContactConfigurationGroupGET objects
              items:
                $ref: '#/components/schemas/ContactConfigurationGroupGET'
    ItemContactConfigurationGroupGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ContactConfigurationGroupGET'
    ListContacts:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ContactGET objects
              items:
                $ref: '#/components/schemas/ContactGET'
    ItemContactGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ContactGET'
    ListLetters:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of DocumentLetterGET objects
              items:
                $ref: '#/components/schemas/DocumentLetterGET'
    ItemDocumentLetterGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/DocumentLetterGET'
    ListContactPeople:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ContactPeopleGET objects
              items:
                $ref: '#/components/schemas/ContactPeopleGET'
    ItemContactPeopleGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ContactPeopleGET'
    ListContactReminders:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ContactReminderGET objects
              items:
                $ref: '#/components/schemas/ContactReminderGET'
    ItemContactReminderGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ContactReminderGET'
    ListReceivablesConfigurationIsrs:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ReceivablesConfigurationIsrGET objects
              items:
                $ref: '#/components/schemas/ReceivablesConfigurationIsrGET'
    ItemReceivablesConfigurationIsrGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ReceivablesConfigurationIsrGET'
    ListDeliveryNotes:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of DocumentDeliveryNoteGET objects
              items:
                $ref: '#/components/schemas/DocumentDeliveryNoteGET'
    ItemDocumentDeliveryNoteGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/DocumentDeliveryNoteGET'
    ListInvoicesStandard:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of DocumentInvoiceStandardGET objects
              items:
                $ref: '#/components/schemas/DocumentInvoiceStandardGET'
    ItemDocumentInvoiceStandardGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/DocumentInvoiceStandardGET'
    ListOffers:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of DocumentOfferGET objects
              items:
                $ref: '#/components/schemas/DocumentOfferGET'
    ItemDocumentOfferGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/DocumentOfferGET'
    ListOrderConfirmations:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of DocumentOrderConfirmationGET objects
              items:
                $ref: '#/components/schemas/DocumentOrderConfirmationGET'
    ItemDocumentOrderConfirmationGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/DocumentOrderConfirmationGET'
    ListDocumentInvoicePayments:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of DocumentInvoicePaymentGET objects
              items:
                $ref: '#/components/schemas/DocumentInvoicePaymentGET'
    ItemDocumentInvoicePaymentGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/DocumentInvoicePaymentGET'
    ListReportingActivities:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ActivityGET objects
              items:
                $ref: '#/components/schemas/ActivityGET'
    ItemActivityGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ActivityGET'
    ListReportingCostUnits:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ReportingCostUnitGET objects
              items:
                $ref: '#/components/schemas/ReportingCostUnitGET'
    ItemReportingCostUnitGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ReportingCostUnitGET'
    ListReportingEfforts:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ReportingEffortGET objects
              items:
                $ref: '#/components/schemas/ReportingEffortGET'
    ItemReportingEffortGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ReportingEffortGET'
    ListReportingProjects:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of ReportingProjectGET objects
              items:
                $ref: '#/components/schemas/ReportingProjectGET'
    ItemReportingProjectGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/ReportingProjectGET'
    ListWorkingHours:
      allOf:
        - type: object
          properties:
            pagination:
              $ref: '#/components/schemas/ListPagination'
        - type: object
          properties:
            items:
              type: array
              description: Collection of WorkingHoursGET objects
              items:
                $ref: '#/components/schemas/WorkingHoursGET'
    ItemWorkingHoursGET:
      required:
        - item
      type: object
      properties:
        item:
          $ref: '#/components/schemas/WorkingHoursGET'
    ConfigurationBankAccountSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: id
    CatalogCategorySort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    CatalogProductSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    CatalogServiceSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    CatalogSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    DocumentOrderConfirmationSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -number
    DescriptiveCustomFieldSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentOrderConfirmationChangeStatusSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentInvoiceStandardChangeStatusSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentOfferChangeStatusSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentDeliveryNoteChangeStatusSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentChangeStatusSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentOrderConfirmationPdfSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentInvoicePdfSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentOfferPdfSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentInvoicePdfOptionsSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentPdfOptionsSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentDeliveryNotePdfSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentPdfSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentOrderConfirmationPreviewSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentInvoicePreviewSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentOfferPreviewSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentDeliveryNotePreviewSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentPreviewSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentOrderConfirmationSendByEmailSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentInvoiceSendByEmailSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentOfferSendByEmailSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentDeliveryNoteSendByEmailSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentSendByEmailRecipientSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentSendByEmailSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentSendByPostSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentFreeTextSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: id
    DocumentOrderConfirmationTextSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: status
    DocumentInvoiceTextSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: status
    DocumentOfferTextSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: status
    DocumentDeliveryNoteTextSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: status
    DocumentTextSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: status
    ReceivablesConfigurationIsrSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: delivery_number
    DocumentInvoicePaymentSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -date
    DocumentInvoiceWorkflowSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: id
    DocumentInvoiceRecurringSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -date
    DocumentInvoiceStandardSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -number
    InvoiceSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -number
    DocumentOrderConfirmationPositionSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -id
    DocumentInvoicePositionSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -id
    DocumentOfferPositionSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -id
    DocumentDeliveryNotePositionSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -id
    ObjectposSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -id
    DocumentOfferSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -number
    DocumentDeliveryNoteSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -number
    CatalogConfigurationUnitSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: custom,name
    ActivitySort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    ReportingEffortSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -date,-duration
    ReportingCostUnitSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    ReportingProjectSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    WorkingHoursSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -date,-time_start
    DashboardBoxCustomSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: column,order
    DashboardBoxSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: title
    Oauth2ClientSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    Oauth2ClientSecretSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    Oauth2ConnectedApplicationSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -last_used
    ContactAccountSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: description
    ContactAddressSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: street
    ContactPeopleSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: surname
    ContactConfigurationGroupSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    DocumentLetterSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: title
    ContactReminderSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: date_time
    ContactSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: name
    DescriptiveContactGroupSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -n,-a
    DocumentLetterChangeStatusSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentLetterPdfSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentLetterPreviewSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DocumentLetterSendByEmailSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    CostSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    AccountingOfferSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -created
    AccountantRequestSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -created
    AccountingRequestSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: -created
    ConfigurationExchangeRateSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: currency_from,currency_to
    DescriptiveAccountingCostSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    DescriptiveAccountingInvoiceSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    AuthOwnerSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    AuthProfileSort:
      type: string
      description: Sorting expression. Key or comma separated keys. Key preceded with
        minus (-) means descending.
      default: ""
    AccountantRequestDELETE:
      type: object
      xml:
        name: AccountantRequestDELETE
    AccountantRequestGET:
      required:
        - category
        - comment
        - contact_address
        - contact_company
        - contact_email
        - contact_person
        - contact_phone
        - created
        - id
        - latest_delivery
        - legal_country
        - legal_form
        - period_from
        - period_to
        - status
      type: object
      properties:
        id:
          type: integer
          description: id of the request
        category:
          type: string
          enum:
            - V
            - FS
          description: 'category of the request; possible values: V - VAT statement,
            FS - Annual financial statement'
        period_from:
          type: string
          description: start of an accounting period
          format: date
        period_to:
          type: string
          description: end of an accounting period
          format: date
        latest_delivery:
          type: string
          description: date of latest accepted delivery
          format: date
        legal_country:
          type: string
          description: country ISO2
        legal_form:
          type: string
          enum:
            - SE
            - LLC
            - L
            - LP
          description: 'legal form; possible values: SE - Sole proprietorship, LLC
            - GmbH, L - AG, LP - General partnership'
        contact_company:
          type: string
          description: company name
        contact_address:
          type: string
          description: company address
        contact_person:
          type: string
          description: company contact person name
        contact_phone:
          type: string
          description: company contact phone number
        contact_email:
          type: string
          description: company contact email address
        comment:
          type: string
          description: optional comment
        data_invoice:
          type: array
          description: amount of invoices in a period
          items:
            $ref: '#/components/schemas/DescriptiveAccountingInvoiceGET'
        data_invoice_vat:
          type: array
          description: invoiced VAT rates
          items:
            type: number
            format: float
        data_cost:
          type: array
          description: amounts of costs in a period
          items:
            $ref: '#/components/schemas/DescriptiveAccountingCostGET'
        data_cost_vat:
          type: array
          description: received VAT rates
          items:
            type: number
            format: float
        data_cost_category_count:
          type: integer
          description: amount of cost categories
        status:
          type: string
          enum:
            - N
            - T
            - A
            - R
            - L
            - I
          default: 'N'
          description: 'status of the request; possible values: N - New, T - Offer,
            A - Awarded, R - Cancelled, L - Not awarded, I - Ignored'
        created:
          type: string
          description: date & time of creating the request
          format: date-time
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: AccountantRequestGET
    AccountantRequestPATCH:
      type: object
      xml:
        name: AccountantRequestPATCH
    AccountantRequestPOST:
      type: object
      xml:
        name: AccountantRequestPOST
    AccountantRequestPUT:
      type: object
      xml:
        name: AccountantRequestPUT
    AccountingOfferDELETE:
      type: object
      xml:
        name: AccountingOfferDELETE
    AccountingOfferGET:
      required:
        - comment
        - contact_address
        - contact_company
        - contact_email
        - contact_person
        - contact_phone
        - created
        - delivery_date
        - id
        - price_currency
        - price_from
        - price_to
        - request_id
        - status
        - terms_and_conditions
      type: object
      properties:
        id:
          type: integer
          description: id of the offer
        request_id:
          type: integer
          description: id of a requested that offer was made for
        delivery_date:
          type: string
          description: approximate delivery date
          format: date
        price_from:
          type: number
          description: price range from
          format: float
        price_to:
          type: number
          description: price range to
          format: float
        price_currency:
          type: string
          description: price currency
        comment:
          type: string
          description: optional comment
        terms_and_conditions:
          type: string
          description: tems & conditions
        contact_company:
          type: string
          description: company name
        contact_address:
          type: string
          description: company address
        contact_person:
          type: string
          description: company contact person name
        contact_phone:
          type: string
          description: company contact phone number
        contact_email:
          type: string
          description: company contact email address
        status:
          type: string
          enum:
            - O
            - A
            - L
          default: 'O'
          description: 'status of the offer; possible values: O - Open, A - Awarded,
            L - Not awarded'
        created:
          type: string
          description: date & time of creating the offer
          format: date-time
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - manage
          description: |
            actions that can be performed on an item (possible values: view, manage)
      xml:
        name: AccountingOfferGET
    AccountingOfferPATCH:
      type: object
      xml:
        name: AccountingOfferPATCH
    AccountingOfferPOST:
      required:
        - contact_email
        - contact_person
        - contact_phone
        - delivery_date
        - price_currency
        - price_from
        - price_to
        - request_id
        - terms_and_conditions
      type: object
      properties:
        request_id:
          type: integer
          description: id of a requested that offer was made for
        delivery_date:
          type: string
          description: approximate delivery date
          format: date
        price_from:
          type: number
          description: price range from
          format: float
        price_to:
          type: number
          description: price range to
          format: float
        price_currency:
          type: string
          description: price currency
        comment:
          type: string
          description: optional comment
        terms_and_conditions:
          type: string
          description: tems & conditions
        contact_person:
          type: string
          description: company contact person name
        contact_phone:
          type: string
          description: company contact phone number
        contact_email:
          type: string
          description: company contact email address
      xml:
        name: AccountingOfferPOST
    AccountingOfferPUT:
      type: object
      xml:
        name: AccountingOfferPUT
    AccountingRequestDELETE:
      type: object
      xml:
        name: AccountingRequestDELETE
    AccountingRequestGET:
      required:
        - category
        - comment
        - contact_address
        - contact_company
        - contact_email
        - contact_person
        - contact_phone
        - created
        - id
        - latest_delivery
        - legal_country
        - legal_form
        - offer_awarded_company_name
        - offer_awarded_id
        - offer_count
        - period_from
        - period_to
        - status
      type: object
      properties:
        id:
          type: integer
          description: id of the request
        category:
          type: string
          enum:
            - V
            - FS
          description: 'category of the request; possible values: V - VAT statement,
            FS - Annual financial statement'
        period_from:
          type: string
          description: start of an accounting period
          format: date
        period_to:
          type: string
          description: end of an accounting period
          format: date
        latest_delivery:
          type: string
          description: date of latest accepted delivery
          format: date
        legal_country:
          type: string
          description: country ISO2
        legal_form:
          type: string
          enum:
            - SE
            - LLC
            - L
            - LP
          description: 'legal form; possible values: SE - Sole proprietorship, LLC
            - GmbH, L - AG, LP - General partnership'
        contact_company:
          type: string
          description: company name
        contact_address:
          type: string
          description: company address
        contact_person:
          type: string
          description: company contact person name
        contact_phone:
          type: string
          description: company contact phone number
        contact_email:
          type: string
          description: company contact email address
        comment:
          type: string
          description: optional comment
        data_invoice:
          type: array
          description: amounts of invoices in a period
          items:
            $ref: '#/components/schemas/DescriptiveAccountingInvoiceGET'
        data_invoice_vat:
          type: array
          description: invoiced VAT rates
          items:
            type: number
            format: float
        data_cost:
          type: array
          description: amounts of costs in a period
          items:
            $ref: '#/components/schemas/DescriptiveAccountingCostGET'
        data_cost_vat:
          type: array
          description: received VAT rates
          items:
            type: number
            format: float
        data_cost_category_count:
          type: integer
          description: amount of cost categories
        status:
          type: string
          enum:
            - O
            - C
            - A
          default: 'O'
          description: 'status of the request; possible values: O - Open, C - Cancelled,
            A - Awarded'
        offer_count:
          type: integer
          description: how many offers were made for the request
        offer_awarded_id:
          type: integer
          description: id of the offer that was accepted for the request
        offer_awarded_company_name:
          type: string
          description: name of the company that offer was accepted for the request
        created:
          type: string
          description: date & time of creating the request
          format: date-time
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - manage
          description: |
            actions that can be performed on an item (possible values: view, manage)
      xml:
        name: AccountingRequestGET
    AccountingRequestPATCH:
      type: object
      xml:
        name: AccountingRequestPATCH
    AccountingRequestPOST:
      required:
        - category
        - contact_email
        - contact_person
        - contact_phone
        - data_cost
        - data_cost_category_count
        - data_cost_vat
        - data_invoice
        - data_invoice_vat
        - latest_delivery
        - legal_country
        - legal_form
        - period_from
        - period_to
      type: object
      properties:
        category:
          type: string
          enum:
            - V
            - FS
          description: 'category of the request; possible values: V - VAT statement,
            FS - Annual financial statement'
        period_from:
          type: string
          description: start of an accounting period
          format: date
        period_to:
          type: string
          description: end of an accounting period
          format: date
        latest_delivery:
          type: string
          description: date of latest accepted delivery
          format: date
        legal_country:
          type: string
          description: country ISO2
        legal_form:
          type: string
          enum:
            - SE
            - LLC
            - L
            - LP
          description: 'legal form; possible values: SE - Sole proprietorship, LLC
            - GmbH, L - AG, LP - General partnership'
        contact_person:
          type: string
          description: company contact person name
        contact_phone:
          type: string
          description: company contact phone number
        contact_email:
          type: string
          description: company contact email address
        comment:
          type: string
          description: optional comment
        data_invoice:
          type: array
          description: amounts of invoices in a period
          items:
            $ref: '#/components/schemas/DescriptiveAccountingInvoicePOST'
        data_invoice_vat:
          type: array
          description: invoiced VAT rates
          items:
            type: number
            format: float
        data_cost:
          type: array
          description: amounts of costs in a period
          items:
            $ref: '#/components/schemas/DescriptiveAccountingCostPOST'
        data_cost_vat:
          type: array
          description: received VAT rates
          items:
            type: number
            format: float
        data_cost_category_count:
          type: integer
          description: amount of cost categories
      xml:
        name: AccountingRequestPOST
    AccountingRequestPUT:
      type: object
      xml:
        name: AccountingRequestPUT
    ActivityDELETE:
      type: object
      xml:
        name: ActivityDELETE
    ActivityGET:
      required:
        - id
        - name
        - service_id
        - use_service_price
      type: object
      properties:
        id:
          type: integer
          description: activity id
        name:
          type: string
          description: name of activity
        service_id:
          type: integer
          description: id of related service
        use_service_price:
          type: boolean
          description: use price defined in service
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ActivityGET
    ActivityPATCH:
      type: object
      xml:
        name: ActivityPATCH
    ActivityPOST:
      type: object
      xml:
        name: ActivityPOST
    ActivityPUT:
      type: object
      xml:
        name: ActivityPUT
    AuthOwnerDELETE:
      type: object
      xml:
        name: AuthOwnerDELETE
    AuthOwnerGET:
      required:
        - id
        - name
        - surname
      type: object
      properties:
        id:
          type: integer
          description: resource owner id
        name:
          type: string
          description: resource owner name
        surname:
          type: string
          description: resource owner surname
      xml:
        name: AuthOwnerGET
    AuthOwnerPATCH:
      type: object
      xml:
        name: AuthOwnerPATCH
    AuthOwnerPOST:
      type: object
      xml:
        name: AuthOwnerPOST
    AuthOwnerPUT:
      type: object
      xml:
        name: AuthOwnerPUT
    AuthProfileDELETE:
      type: object
      xml:
        name: AuthProfileDELETE
    AuthProfileGET:
      required:
        - company_addition
        - company_city
        - company_country
        - company_currency
        - company_email
        - company_fax
        - company_name
        - company_phone
        - company_postcode
        - company_street
        - company_street2
        - company_street_no
        - company_vat_id
        - company_website
        - email
        - id
        - language
        - name
        - surname
      type: object
      properties:
        id:
          type: integer
          description: user id
        name:
          type: string
          description: user name
        surname:
          type: string
          description: user surname
        email:
          type: string
          description: user email address
        language:
          type: string
          description: communication language
        company_name:
          type: string
          description: company name
        company_addition:
          type: string
          description: another company name line
        company_country:
          type: string
          description: 'company address: country (ISO2)'
        company_street:
          type: string
          description: 'company address: street'
        company_street_no:
          type: string
          description: 'company address: street number'
        company_street2:
          type: string
          description: 'company address: another street line'
        company_postcode:
          type: string
          description: 'company address: postcode'
        company_city:
          type: string
          description: 'company address: city'
        company_phone:
          type: string
          description: phone number
        company_fax:
          type: string
          description: fax number
        company_email:
          type: string
          description: email address
        company_website:
          type: string
          description: website URL
        company_vat_id:
          type: string
          description: VAT/EU VAT ID no.
        company_currency:
          type: string
          description: default billing currency
      xml:
        name: AuthProfileGET
    AuthProfilePATCH:
      type: object
      xml:
        name: AuthProfilePATCH
    AuthProfilePOST:
      type: object
      xml:
        name: AuthProfilePOST
    AuthProfilePUT:
      type: object
      xml:
        name: AuthProfilePUT
    CatalogDELETE:
      type: object
      xml:
        name: CatalogDELETE
    CatalogGET:
      required:
        - category_id
        - created
        - default_amount
        - description
        - id
        - including_vat
        - inventory_available
        - inventory_reserved
        - name
        - notes
        - number
        - price
        - price_purchase
        - unit_id
        - vat
      type: object
      properties:
        id:
          type: integer
        number:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        category_id:
          type: integer
        category_name:
          type: string
        including_vat:
          type: boolean
        vat:
          type: number
          format: float
        unit_id:
          type: integer
        unit_name:
          type: string
        price:
          type: number
          format: float
        price_purchase:
          type: number
          format: float
        inventory_available:
          type: number
          format: float
        inventory_reserved:
          type: number
          format: float
        default_amount:
          type: integer
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        created:
          type: string
          format: date-time
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: CatalogGET
    CatalogPATCH:
      type: object
      xml:
        name: CatalogPATCH
    CatalogPOST:
      required:
        - including_vat
        - name
        - price
        - unit_id
        - vat
      type: object
      properties:
        number:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        category_id:
          type: integer
        including_vat:
          type: boolean
        vat:
          type: number
          format: float
        unit_id:
          type: integer
        price:
          type: number
          format: float
        price_purchase:
          type: number
          format: float
        default_amount:
          type: integer
          description: 'default value: 1'
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
      xml:
        name: CatalogPOST
    CatalogPUT:
      type: object
      properties:
        number:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        category_id:
          type: integer
        including_vat:
          type: boolean
        vat:
          type: number
          format: float
        unit_id:
          type: integer
        price:
          type: number
          format: float
        price_purchase:
          type: number
          format: float
        default_amount:
          type: integer
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
      xml:
        name: CatalogPUT
    CatalogCategoryDELETE:
      type: object
      xml:
        name: CatalogCategoryDELETE
    CatalogCategoryGET:
      required:
        - accounting_account_number
        - id
        - name
        - usage
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        accounting_account_number:
          type: string
        usage:
          type: integer
          description: how many catalog items are using this category
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: CatalogCategoryGET
    CatalogCategoryPATCH:
      type: object
      xml:
        name: CatalogCategoryPATCH
    CatalogCategoryPOST:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        accounting_account_number:
          type: string
      xml:
        name: CatalogCategoryPOST
    CatalogCategoryPUT:
      type: object
      properties:
        name:
          type: string
        accounting_account_number:
          type: string
      xml:
        name: CatalogCategoryPUT
    CatalogConfigurationUnitDELETE:
      type: object
      xml:
        name: CatalogConfigurationUnitDELETE
    CatalogConfigurationUnitGET:
      required:
        - custom
        - id
        - name
        - scope
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        scope:
          type: string
          enum:
            - s
            - p
            - a
          description: 'scope, one of: s - service, p - product, a - all'
        custom:
          type: boolean
          description: is unit a custom company unit (if not, it's a system unit)
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: CatalogConfigurationUnitGET
    CatalogConfigurationUnitPATCH:
      type: object
      xml:
        name: CatalogConfigurationUnitPATCH
    CatalogConfigurationUnitPOST:
      type: object
      xml:
        name: CatalogConfigurationUnitPOST
    CatalogConfigurationUnitPUT:
      type: object
      xml:
        name: CatalogConfigurationUnitPUT
    CatalogProductDELETE:
      type: object
      xml:
        name: CatalogProductDELETE
    CatalogProductGET:
      required:
        - category_id
        - created
        - default_amount
        - description
        - id
        - including_vat
        - inventory_available
        - inventory_reserved
        - name
        - notes
        - number
        - price
        - price_purchase
        - unit_id
        - vat
      type: object
      properties:
        id:
          type: integer
        number:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        category_id:
          type: integer
        category_name:
          type: string
        including_vat:
          type: boolean
        vat:
          type: number
          format: float
        unit_id:
          type: integer
        unit_name:
          type: string
        price:
          type: number
          format: float
        price_purchase:
          type: number
          format: float
        inventory_available:
          type: number
          format: float
        inventory_reserved:
          type: number
          format: float
        default_amount:
          type: integer
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        created:
          type: string
          format: date-time
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: CatalogProductGET
    CatalogProductPATCH:
      type: object
      xml:
        name: CatalogProductPATCH
    CatalogProductPOST:
      required:
        - including_vat
        - name
        - price
        - unit_id
        - vat
      type: object
      properties:
        number:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        category_id:
          type: integer
        including_vat:
          type: boolean
        vat:
          type: number
          format: float
        unit_id:
          type: integer
        price:
          type: number
          format: float
        price_purchase:
          type: number
          format: float
        default_amount:
          type: integer
          description: 'default value: 1'
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
      xml:
        name: CatalogProductPOST
    CatalogProductPUT:
      type: object
      properties:
        number:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        category_id:
          type: integer
        including_vat:
          type: boolean
        vat:
          type: number
          format: float
        unit_id:
          type: integer
        price:
          type: number
          format: float
        price_purchase:
          type: number
          format: float
        default_amount:
          type: integer
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
      xml:
        name: CatalogProductPUT
    CatalogServiceDELETE:
      type: object
      xml:
        name: CatalogServiceDELETE
    CatalogServiceGET:
      required:
        - category_id
        - created
        - default_amount
        - description
        - id
        - including_vat
        - name
        - notes
        - number
        - price
        - unit_id
        - vat
      type: object
      properties:
        id:
          type: integer
        number:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        category_id:
          type: integer
        category_name:
          type: string
        including_vat:
          type: boolean
        vat:
          type: number
          format: float
        unit_id:
          type: integer
        unit_name:
          type: string
        price:
          type: number
          format: float
        default_amount:
          type: integer
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        created:
          type: string
          format: date-time
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: CatalogServiceGET
    CatalogServicePATCH:
      type: object
      xml:
        name: CatalogServicePATCH
    CatalogServicePOST:
      required:
        - including_vat
        - name
        - price
        - unit_id
        - vat
      type: object
      properties:
        number:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        category_id:
          type: integer
        including_vat:
          type: boolean
        vat:
          type: number
          format: float
        unit_id:
          type: integer
        price:
          type: number
          format: float
        default_amount:
          type: integer
          description: 'default value: 1'
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
      xml:
        name: CatalogServicePOST
    CatalogServicePUT:
      type: object
      properties:
        number:
          type: string
        name:
          type: string
        description:
          type: string
        notes:
          type: string
        category_id:
          type: integer
        including_vat:
          type: boolean
        vat:
          type: number
          format: float
        unit_id:
          type: integer
        price:
          type: number
          format: float
        default_amount:
          type: integer
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
      xml:
        name: CatalogServicePUT
    ConfigurationBankAccountDELETE:
      type: object
      xml:
        name: ConfigurationBankAccountDELETE
    ConfigurationBankAccountGET:
      required:
        - auto_sync
        - auto_sync_direction
        - bank_name
        - bic
        - default
        - description
        - iban
        - id
        - number
        - post_account
      type: object
      properties:
        id:
          type: integer
          description: id of a bank account
        default:
          type: boolean
          description: whether it is a default bank account
        description:
          type: string
          description: description
        bank_name:
          type: string
          description: name of the bank
        number:
          type: string
          description: bank account number
        iban:
          type: string
          description: IBAN
        bic:
          type: string
          description: BIC
        post_account:
          type: string
          description: bank’s postal account
        auto_sync:
          type: string
          enum:
            - active
            - inactive
            - requested
          description: 'one of: [active, inactive, requested]'
        auto_sync_direction:
          type: string
          enum:
            - in
            - out
            - null
          description: 'one of: [in, out, null (means no direction specified)]'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ConfigurationBankAccountGET
    ConfigurationBankAccountPATCH:
      type: object
      xml:
        name: ConfigurationBankAccountPATCH
    ConfigurationBankAccountPOST:
      required:
        - description
        - iban
      type: object
      properties:
        default:
          type: boolean
          description: 'whether it is a default bank account - default value: false'
        description:
          type: string
          description: description
        bank_name:
          type: string
          description: name of the bank
        number:
          type: string
          description: bank account number
        iban:
          type: string
          description: IBAN
        bic:
          type: string
          description: BIC
        post_account:
          type: string
          description: bank’s postal account
      xml:
        name: ConfigurationBankAccountPOST
    ConfigurationBankAccountPUT:
      type: object
      properties:
        default:
          type: boolean
          description: whether it is a default bank account
        description:
          type: string
          description: description
        bank_name:
          type: string
          description: name of the bank
        number:
          type: string
          description: bank account number
        iban:
          type: string
          description: IBAN
        bic:
          type: string
          description: BIC
        post_account:
          type: string
          description: bank’s postal account
      xml:
        name: ConfigurationBankAccountPUT
    ConfigurationExchangeRateDELETE:
      type: object
      xml:
        name: ConfigurationExchangeRateDELETE
    ConfigurationExchangeRateGET:
      required:
        - created
        - currency_from
        - currency_to
        - id
        - rate
      type: object
      properties:
        id:
          type: integer
        currency_from:
          type: string
          description: ISO currency name we are setting exchange from
        currency_to:
          type: string
          description: ISO currency name we are setting exchange to
        rate:
          type: number
          description: exchange rate value
          format: float
        created:
          type: string
          description: when exchange was created
          format: date-time
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ConfigurationExchangeRateGET
    ConfigurationExchangeRatePATCH:
      type: object
      xml:
        name: ConfigurationExchangeRatePATCH
    ConfigurationExchangeRatePOST:
      required:
        - currency_from
        - currency_to
        - rate
      type: object
      properties:
        currency_from:
          type: string
          description: ISO currency name we are setting exchange from
        currency_to:
          type: string
          description: ISO currency name we are setting exchange to
        rate:
          type: number
          description: exchange rate value
          format: float
      xml:
        name: ConfigurationExchangeRatePOST
    ConfigurationExchangeRatePUT:
      type: object
      properties:
        currency_from:
          type: string
          description: ISO currency name we are setting exchange from
        currency_to:
          type: string
          description: ISO currency name we are setting exchange to
        rate:
          type: number
          description: exchange rate value
          format: float
      xml:
        name: ConfigurationExchangeRatePUT
    ContactDELETE:
      type: object
      xml:
        name: ContactDELETE
    ContactGET:
      required:
        - communication_channel
        - communication_language
        - communication_newsletter
        - created
        - currency
        - discount_rate
        - discount_type
        - ebill_account_id
        - email
        - fax
        - gender
        - gender_salutation_active
        - hourly_rate
        - id
        - main_address_id
        - name
        - name_addition
        - notes
        - number
        - payment_grace
        - phone
        - relation
        - salutation
        - type
        - vat_identification
        - vat_rate
        - website
      type: object
      properties:
        id:
          type: integer
          description: id of a contact
        number:
          type: string
          description: unique number
        relation:
          type: array
          items:
            type: string
            enum:
              - CL
              - CR
          description: |
            type of contact's relation; possible values: CL - Customer, CR - Creditor
        type:
          type: string
          enum:
            - C
            - P
          description: |
            type of contact; possible values: C - Company, P - Private
        gender:
          type: string
          enum:
            - M
            - F
          description: 'gender of contact (required for P type); possible values:
            M - Male, F - Female'
        gender_salutation_active:
          type: boolean
          description: whether to show Mr./Ms. before contact name (for P type only)
        name:
          type: string
          description: name of contact
        name_addition:
          type: string
          description: additional text for contact name
        salutation:
          type: string
          description: e.g. Dear Mr. Jones
        phone:
          type: string
          description: contact phone number
        fax:
          type: string
          description: contact fax number
        email:
          type: string
          description: contact email address
        website:
          type: string
          description: contact website address
        notes:
          type: string
          description: additional notes
        communication_language:
          type: string
          description: 'main communication language - default value: ''default documents language'''
        communication_channel:
          type: string
          enum:
            - U
            - E
            - P
          default: 'U'
          description: |
            possible values: U - No preference, E - Documents by e-mail, P - Documents by post
        communication_newsletter:
          type: string
          enum:
            - A
            - M
            - N
          default: 'N'
          description: |
            possible values:
              A - Send to main e-mail address and contacts,
              M - Only send to main e-mail address,
              N - No newsletter wanted
        currency:
          type: string
          description: default currency
        ebill_account_id:
          type: string
          description: e-bill account identification number
        vat_identification:
          type: string
          description: VAT identification number
        vat_rate:
          type: number
          description: default VAT rate
          format: float
        discount_rate:
          type: number
          description: default discount rate
          format: float
        discount_type:
          type: string
          enum:
            - P
            - A
          default: 'P'
          description: |
            default discount type; possible valuesP - in %, A - Amount
        payment_grace:
          type: integer
          description: default payment deadline
        hourly_rate:
          type: number
          description: cost per hour
          format: float
        created:
          type: string
          description: when contact was created
          example: 'YYYY-MM-DD HH:MM:SS'
          format: date-time
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        main_address_id:
          type: integer
          description: main address id
        main_address:
          $ref: '#/components/schemas/ContactAddressGET'
        groups:
          type: array
          description: groups assigned to contact
          items:
            $ref: '#/components/schemas/DescriptiveContactGroupGET'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ContactGET
    ContactPATCH:
      type: object
      xml:
        name: ContactPATCH
    ContactPOST:
      required:
        - main_address
        - name
        - relation
        - type
      type: object
      properties:
        number:
          type: string
          description: 'unique number - default value: ''next free number'''
        relation:
          type: array
          items:
            type: string
            enum:
              - CL
              - CR
          description: |
            type of contact's relation; possible values: CL - Customer, CR - Creditor
        type:
          type: string
          description: 'type of contact; possible values: C - Company, P - Private'
        gender:
          type: string
          enum:
            - M
            - F
          description: 'gender of contact (required for P type); possible values:
            M - Male, F - Female'
        gender_salutation_active:
          type: boolean
          description: 'whether to show Mr./Ms. before contact name (for P type only)
            - default value: false'
        name:
          type: string
          description: name of contact
        name_addition:
          type: string
          description: additional text for contact name
        salutation:
          type: string
          description: e.g. Dear Mr. Jones
        phone:
          type: string
          description: contact phone number
        fax:
          type: string
          description: contact fax number
        email:
          type: string
          description: contact email address
        website:
          type: string
          description: contact website address
        notes:
          type: string
          description: additional notes
        communication_language:
          type: string
          description: 'main communication language - default value: ''default documents
            language'''
        communication_channel:
          type: string
          enum:
            - U
            - E
            - P
          default: 'U'
          description: |
            possible values: U - No preference, E - Documents by e-mail, P - Documents by post
        communication_newsletter:
          type: string
          enum:
            - A
            - M
            - N
          default: 'N'
          description: |
            possible values:
              A - Send to main e-mail address and contacts,
              M - Only send to main e-mail address,
              N - No newsletter wanted
        currency:
          type: string
          description: default currency
        ebill_account_id:
          type: string
          description: e-bill account identification number
        vat_identification:
          type: string
          description: VAT identification number
        vat_rate:
          type: number
          description: default VAT rate
          format: float
        discount_rate:
          type: number
          description: 'default discount rate - default value: 0'
          format: float
        discount_type:
          type: string
          enum:
            - P
            - A
          default: 'P'
          description: |
            default discount type; possible valuesP - in %, A - Amount
        payment_grace:
          type: integer
          description: default payment deadline
        hourly_rate:
          type: number
          description: cost per hour
          format: float
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
        main_address:
          $ref: '#/components/schemas/ContactAddressPOST'
      xml:
        name: ContactPOST
    ContactPUT:
      type: object
      properties:
        number:
          type: string
          description: unique number
        relation:
          type: array
          items:
            type: string
            enum:
              - CL
              - CR
          description: |
            type of contact's relation; possible values: CL - Customer, CR - Creditor
        type:
          type: string
          description: 'type of contact; possible values: C - Company, P - Private'
        gender:
          type: string
          enum:
            - M
            - F
          description: 'gender of contact (required for P type); possible values:
            M - Male, F - Female'
        gender_salutation_active:
          type: boolean
          description: whether to show Mr./Ms. before contact name (for P type only)
        name:
          type: string
          description: name of contact
        name_addition:
          type: string
          description: additional text for contact name
        salutation:
          type: string
          description: e.g. Dear Mr. Jones
        phone:
          type: string
          description: contact phone number
        fax:
          type: string
          description: contact fax number
        email:
          type: string
          description: contact email address
        website:
          type: string
          description: contact website address
        notes:
          type: string
          description: additional notes
        communication_language:
          type: string
          description: main communication language
        communication_channel:
          type: string
          enum:
            - U
            - E
            - P
          default: 'U'
          description: |
            possible values: U - No preference, E - Documents by e-mail, P - Documents by post
        communication_newsletter:
          type: string
          enum:
            - A
            - M
            - N
          default: 'N'
          description: |
            possible values:
              A - Send to main e-mail address and contacts,
              M - Only send to main e-mail address,
              N - No newsletter wanted
        currency:
          type: string
          description: default currency
        ebill_account_id:
          type: string
          description: e-bill account identification number
        vat_identification:
          type: string
          description: VAT identification number
        vat_rate:
          type: number
          description: default VAT rate
          format: float
        discount_rate:
          type: number
          description: default discount rate
          format: float
        discount_type:
          type: string
          enum:
            - P
            - A
          default: 'P'
          description: |
            default discount type; possible valuesP - in %, A - Amount
        payment_grace:
          type: integer
          description: default payment deadline
        hourly_rate:
          type: number
          description: cost per hour
          format: float
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
      xml:
        name: ContactPUT
    ContactAccountDELETE:
      type: object
      xml:
        name: ContactAccountDELETE
    ContactAccountGET:
      required:
        - bic
        - default
        - description
        - id
        - number
        - type
      type: object
      properties:
        id:
          type: integer
          description: id of an account
        default:
          type: boolean
          description: whether it is a default contact's account
        type:
          type: string
          enum:
            - IBAN
            - ISR
            - QR
            - QRREF
          description: 'type (possible values: IBAN, ISR, QR, QRREF)'
        number:
          type: string
          description: IBAN or ISR or QR IBAN (3xxxxx) number (depends on the type)
        bic:
          type: string
          description: BIC number
        description:
          type: string
          description: internal description
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ContactAccountGET
    ContactAccountPATCH:
      type: object
      xml:
        name: ContactAccountPATCH
    ContactAccountPOST:
      required:
        - number
        - type
      type: object
      properties:
        default:
          type: boolean
          description: 'whether it is a default contact''s account - default value:
            false'
        type:
          type: string
          enum:
            - IBAN
            - ISR
            - QR
            - QRREF
          description: 'type (possible values: IBAN, ISR, QR, QRREF)'
        number:
          type: string
          description: IBAN or ISR or QR IBAN (3xxxxx) number (depends on the type)
        bic:
          type: string
          description: BIC number
        description:
          type: string
          description: internal description
      xml:
        name: ContactAccountPOST
    ContactAccountPUT:
      type: object
      properties:
        default:
          type: boolean
          description: whether it is a default contact's account
        type:
          type: string
          enum:
            - IBAN
            - ISR
            - QR
            - QRREF
          description: 'type (possible values: IBAN, ISR, QR, QRREF)'
        number:
          type: string
          description: IBAN or ISR or QR IBAN (3xxxxx) number (depends on the type)
        bic:
          type: string
          description: BIC number
        description:
          type: string
          description: internal description
      xml:
        name: ContactAccountPUT
    ContactAddressDELETE:
      type: object
      xml:
        name: ContactAddressDELETE
    ContactAddressGET:
      required:
        - city
        - country
        - default
        - default_prepage
        - hide_on_documents
        - id
        - postcode
        - street
        - street2
        - street_no
      type: object
      properties:
        id:
          type: integer
          description: id of an address
        default:
          type: boolean
          description: whether it is a default contact's address
        country:
          type: string
          description: country ISO2 code (eg. CH)
        street:
          type: string
          description: street
        street_no:
          type: string
          description: number of apartment
        street2:
          type: string
          description: additional address information
        postcode:
          type: string
          description: postcode
        city:
          type: string
          description: city
        hide_on_documents:
          type: boolean
          description: whether to hide this address on documents
        default_prepage:
          type: boolean
          description: whether the address is a default postal address
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ContactAddressGET
    ContactAddressPATCH:
      type: object
      xml:
        name: ContactAddressPATCH
    ContactAddressPOST:
      required:
        - city
        - country
        - postcode
        - street
      type: object
      properties:
        default:
          type: boolean
          description: 'whether it is a default contact''s address - default value:
            false'
        country:
          type: string
          description: country ISO2 code (eg. CH)
        street:
          type: string
          description: street
        street_no:
          type: string
          description: number of apartment
        street2:
          type: string
          description: additional address information
        postcode:
          type: string
          description: postcode
        city:
          type: string
          description: city
        hide_on_documents:
          type: boolean
          description: 'whether to hide this address on documents - default value:
            false'
        default_prepage:
          type: boolean
          description: 'whether the address is a default postal address - default
            value: false'
      xml:
        name: ContactAddressPOST
    ContactAddressPUT:
      type: object
      properties:
        default:
          type: boolean
          description: whether it is a default contact's address
        country:
          type: string
          description: country ISO2 code (eg. CH)
        street:
          type: string
          description: street
        street_no:
          type: string
          description: number of apartment
        street2:
          type: string
          description: additional address information
        postcode:
          type: string
          description: postcode
        city:
          type: string
          description: city
        hide_on_documents:
          type: boolean
          description: whether to hide this address on documents
        default_prepage:
          type: boolean
          description: whether the address is a default postal address
      xml:
        name: ContactAddressPUT
    ContactConfigurationGroupDELETE:
      type: object
      xml:
        name: ContactConfigurationGroupDELETE
    ContactConfigurationGroupGET:
      required:
        - id
        - name
        - usage
      type: object
      properties:
        id:
          type: integer
          description: id of a group
        name:
          type: string
          description: name of a group
        usage:
          type: integer
          description: how many contacts are assigned to this group
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ContactConfigurationGroupGET
    ContactConfigurationGroupPATCH:
      type: object
      xml:
        name: ContactConfigurationGroupPATCH
    ContactConfigurationGroupPOST:
      required:
        - name
      type: object
      properties:
        name:
          type: string
          description: name of a group
      xml:
        name: ContactConfigurationGroupPOST
    ContactConfigurationGroupPUT:
      type: object
      properties:
        name:
          type: string
          description: name of a group
      xml:
        name: ContactConfigurationGroupPUT
    ContactPeopleDELETE:
      type: object
      xml:
        name: ContactPeopleDELETE
    ContactPeopleGET:
      required:
        - default
        - department
        - email
        - gender
        - id
        - name
        - phone
        - salutation
        - show_department
        - show_title
        - surname
        - wants_newsletter
      type: object
      properties:
        id:
          type: integer
          description: id of a person
        default:
          type: boolean
          description: whether it is a default contact's person
        name:
          type: string
          description: name
        surname:
          type: string
          description: surname
        gender:
          type: string
          enum:
            - M
            - F
          description: 'gender of contact (required for P type); possible values:
            M - Male, F - Female'
        email:
          type: string
          description: email
        phone:
          type: string
          description: phone
        department:
          type: string
          description: department
        salutation:
          type: string
          description: salutation
        show_title:
          type: boolean
          description: whether to show Mr/Ms before name
        show_department:
          type: boolean
          description: whether to show department
        wants_newsletter:
          type: boolean
          description: whether person whishes to receive newsletter
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ContactPeopleGET
    ContactPeoplePATCH:
      type: object
      xml:
        name: ContactPeoplePATCH
    ContactPeoplePOST:
      required:
        - gender
        - name
        - surname
      type: object
      properties:
        default:
          type: boolean
          description: 'whether it is a default contact''s person - default value:
            false'
        name:
          type: string
          description: name
        surname:
          type: string
          description: surname
        gender:
          type: string
          enum:
            - M
            - F
          description: 'gender of contact (required for P type); possible values:
            M - Male, F - Female'
        email:
          type: string
          description: email
        phone:
          type: string
          description: phone
        department:
          type: string
          description: department
        salutation:
          type: string
          description: salutation
        show_title:
          type: boolean
          description: 'whether to show Mr/Ms before name - default value: false'
        show_department:
          type: boolean
          description: 'whether to show department - default value: false'
        wants_newsletter:
          type: boolean
          description: 'whether person whishes to receive newsletter - default value:
            true'
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
      xml:
        name: ContactPeoplePOST
    ContactPeoplePUT:
      type: object
      properties:
        default:
          type: boolean
          description: whether it is a default contact's person
        name:
          type: string
          description: name
        surname:
          type: string
          description: surname
        gender:
          type: string
          enum:
            - M
            - F
          description: 'gender of contact (required for P type); possible values:
            M - Male, F - Female'
        email:
          type: string
          description: email
        phone:
          type: string
          description: phone
        department:
          type: string
          description: department
        salutation:
          type: string
          description: salutation
        show_title:
          type: boolean
          description: whether to show Mr/Ms before name
        show_department:
          type: boolean
          description: whether to show department
        wants_newsletter:
          type: boolean
          description: whether person whishes to receive newsletter
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
      xml:
        name: ContactPeoplePUT
    ContactReminderDELETE:
      type: object
      xml:
        name: ContactReminderDELETE
    ContactReminderGET:
      required:
        - contact_id
        - date_time
        - description
        - id
        - interval_type
        - interval_value
        - title
      type: object
      properties:
        id:
          type: integer
          description: id of a reminder
        contact_id:
          type: integer
          description: id of a contact
        contact_name:
          type: string
          description: name of a contact
        date_time:
          type: string
          description: 'date and time of event that should be reminded (format: Y-m-d
            H:i:s)'
          format: date-time
        title:
          type: string
          description: title of reminder
        description:
          type: string
          description: description of reminder
        interval_value:
          type: integer
          description: value of interval in which reminder will be activated
        interval_type:
          type: string
          enum:
            - hour
            - day
            - month
          description: 'one of: [''hour'',''day'',''month'']'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ContactReminderGET
    ContactReminderPATCH:
      type: object
      xml:
        name: ContactReminderPATCH
    ContactReminderPOST:
      required:
        - contact_id
        - date_time
        - interval_type
        - interval_value
        - title
      type: object
      properties:
        contact_id:
          type: integer
          description: id of a contact
        date_time:
          type: string
          description: 'date and time of event that should be reminded (format: Y-m-d
            H:i:s)'
          format: date-time
        title:
          type: string
          description: title of reminder
        description:
          type: string
          description: description of reminder
        interval_value:
          type: integer
          description: value of interval in which reminder will be activated
        interval_type:
          type: string
          enum:
            - hour
            - day
            - month
          description: 'one of: [''hour'',''day'',''month'']'
      xml:
        name: ContactReminderPOST
    ContactReminderPUT:
      type: object
      properties:
        contact_id:
          type: integer
          description: id of a contact
        date_time:
          type: string
          description: 'date and time of event that should be reminded (format: Y-m-d
            H:i:s)'
          format: date-time
        title:
          type: string
          description: title of reminder
        description:
          type: string
          description: description of reminder
        interval_value:
          type: integer
          description: value of interval in which reminder will be activated
        interval_type:
          type: string
          enum:
            - hour
            - day
            - month
          description: 'one of: [''hour'',''day'',''month'']'
      xml:
        name: ContactReminderPUT
    CostDELETE:
      type: object
      xml:
        name: CostDELETE
    CostGET:
      type: object
      xml:
        name: CostGET
    CostPATCH:
      type: object
      xml:
        name: CostPATCH
    CostPOST:
      type: object
      xml:
        name: CostPOST
    CostPUT:
      type: object
      xml:
        name: CostPUT
    DashboardBoxDELETE:
      type: object
      xml:
        name: DashboardBoxDELETE
    DashboardBoxGET:
      required:
        - allowed
        - customizable
        - description
        - group
        - id
        - title
      type: object
      properties:
        id:
          type: integer
          description: box id
        title:
          type: string
          description: box title
        description:
          type: string
          description: box description
        group:
          type: string
          description: box group
        customizable:
          type: boolean
          description: whether box needs a configuration
        allowed:
          type: boolean
          description: whether user can add this box to his dashboard
      xml:
        name: DashboardBoxGET
    DashboardBoxPATCH:
      type: object
      xml:
        name: DashboardBoxPATCH
    DashboardBoxPOST:
      type: object
      xml:
        name: DashboardBoxPOST
    DashboardBoxPUT:
      type: object
      xml:
        name: DashboardBoxPUT
    DashboardBoxCustomDELETE:
      type: object
      xml:
        name: DashboardBoxCustomDELETE
    DashboardBoxCustomGET:
      required:
        - box_customizable
        - box_id
        - box_title
        - column
        - configuration
        - created
        - id
        - order
      type: object
      properties:
        id:
          type: integer
          description: custom box id
        box_id:
          type: integer
          description: box id
        box_title:
          type: string
          description: box title
        box_content:
          type: string
          description: box HTML content
        box_customizable:
          type: boolean
          description: whether box needs a configuration
        configuration:
          type: string
          description: configuration JSON
        column:
          type: integer
          description: presentation column starting from 1 to 1 (if null on POST,
            box will go to the first column)
        order:
          type: integer
          description: presentation order starting from 1 (if null on POST, box will
            go to the end)
        created:
          type: string
          description: when custom box was created
          format: date-time
      xml:
        name: DashboardBoxCustomGET
    DashboardBoxCustomPATCH:
      type: object
      xml:
        name: DashboardBoxCustomPATCH
    DashboardBoxCustomPOST:
      required:
        - box_id
      type: object
      properties:
        box_id:
          type: integer
          description: box id
        configuration:
          type: string
          description: configuration JSON
        column:
          type: integer
          description: presentation column starting from 1 to 1 (if null on POST,
            box will go to the first column)
        order:
          type: integer
          description: presentation order starting from 1 (if null on POST, box will
            go to the end)
      xml:
        name: DashboardBoxCustomPOST
    DashboardBoxCustomPUT:
      type: object
      properties:
        configuration:
          type: string
          description: configuration JSON
        column:
          type: integer
          description: presentation column starting from 1 to 1 (if null on POST,
            box will go to the first column)
        order:
          type: integer
          description: presentation order starting from 1 (if null on POST, box will
            go to the end)
      xml:
        name: DashboardBoxCustomPUT
    DescriptiveAccountingCostDELETE:
      type: object
      xml:
        name: DescriptiveAccountingCostDELETE
    DescriptiveAccountingCostGET:
      required:
        - amount
        - count
        - currency
      type: object
      properties:
        amount:
          type: number
          format: float
        currency:
          type: string
        count:
          type: integer
      xml:
        name: DescriptiveAccountingCostGET
    DescriptiveAccountingCostPATCH:
      type: object
      xml:
        name: DescriptiveAccountingCostPATCH
    DescriptiveAccountingCostPOST:
      required:
        - amount
        - count
        - currency
      type: object
      properties:
        amount:
          type: number
          format: float
        currency:
          type: string
        count:
          type: integer
      xml:
        name: DescriptiveAccountingCostPOST
    DescriptiveAccountingCostPUT:
      type: object
      xml:
        name: DescriptiveAccountingCostPUT
    DescriptiveAccountingInvoiceDELETE:
      type: object
      xml:
        name: DescriptiveAccountingInvoiceDELETE
    DescriptiveAccountingInvoiceGET:
      required:
        - amount
        - count
        - currency
      type: object
      properties:
        amount:
          type: number
          format: float
        currency:
          type: string
        count:
          type: integer
      xml:
        name: DescriptiveAccountingInvoiceGET
    DescriptiveAccountingInvoicePATCH:
      type: object
      xml:
        name: DescriptiveAccountingInvoicePATCH
    DescriptiveAccountingInvoicePOST:
      required:
        - amount
        - count
        - currency
      type: object
      properties:
        amount:
          type: number
          format: float
        currency:
          type: string
        count:
          type: integer
      xml:
        name: DescriptiveAccountingInvoicePOST
    DescriptiveAccountingInvoicePUT:
      type: object
      xml:
        name: DescriptiveAccountingInvoicePUT
    DescriptiveContactGroupDELETE:
      type: object
      xml:
        name: DescriptiveContactGroupDELETE
    DescriptiveContactGroupGET:
      required:
        - id
        - name
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
      xml:
        name: DescriptiveContactGroupGET
    DescriptiveContactGroupPATCH:
      type: object
      xml:
        name: DescriptiveContactGroupPATCH
    DescriptiveContactGroupPOST:
      type: object
      xml:
        name: DescriptiveContactGroupPOST
    DescriptiveContactGroupPUT:
      type: object
      xml:
        name: DescriptiveContactGroupPUT
    DescriptiveCustomFieldDELETE:
      type: object
      xml:
        name: DescriptiveCustomFieldDELETE
    DescriptiveCustomFieldGET:
      required:
        - key
        - name
        - value
      type: object
      properties:
        key:
          type: string
        name:
          type: string
        value:
          type: string
      xml:
        name: DescriptiveCustomFieldGET
    DescriptiveCustomFieldPATCH:
      type: object
      xml:
        name: DescriptiveCustomFieldPATCH
    DescriptiveCustomFieldPOST:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      xml:
        name: DescriptiveCustomFieldPOST
    DescriptiveCustomFieldPUT:
      required:
        - key
        - value
      type: object
      properties:
        key:
          type: string
        value:
          type: string
      xml:
        name: DescriptiveCustomFieldPUT
    DocumentChangeStatusDELETE:
      type: object
      xml:
        name: DocumentChangeStatusDELETE
    DocumentChangeStatusGET:
      type: object
      xml:
        name: DocumentChangeStatusGET
    DocumentChangeStatusPATCH:
      required:
        - status
      type: object
      properties:
        status:
          type: string
        date_time:
          type: string
          description: optional date time of a change in Y-m-d H:i:s format (if none
            specified current date time will be taken)
          format: date-time
      xml:
        name: DocumentChangeStatusPATCH
    DocumentChangeStatusPOST:
      type: object
      xml:
        name: DocumentChangeStatusPOST
    DocumentChangeStatusPUT:
      type: object
      xml:
        name: DocumentChangeStatusPUT
    DocumentDeliveryNoteDELETE:
      type: object
      xml:
        name: DocumentDeliveryNoteDELETE
    DocumentDeliveryNoteGET:
      required:
        - contact_address_id
        - contact_id
        - contact_person_id
        - contact_prepage_address_id
        - created
        - currency
        - date
        - discount_rate
        - discount_type
        - id
        - language
        - layout_id
        - notes
        - number
        - page_amount
        - period_text
        - signature_id
        - status
        - total
        - vat_included
      type: object
      properties:
        id:
          type: integer
          description: delivery note id
        number:
          type: string
          description: unique number
        contact_id:
          type: integer
          description: id of a contact
        contact_name:
          type: string
          description: name of a contact
        contact:
          $ref: '#/components/schemas/ContactGET'
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_prepage_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_person_id:
          type: integer
          description: id of a contact's person
        contact_person:
          $ref: '#/components/schemas/ContactPeopleGET'
        date:
          type: string
          description: date of the delivery note
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        total:
          type: number
          description: total amount of the delivery note
          format: float
        vat_included:
          type: boolean
          description: whether prices in delivery note include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it

        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        page_amount:
          type: integer
          description: how many pages delivery note has
        notes:
          type: string
          description: optional notes
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of delivery note, possible values: DR - draft, S -
            sent, B - billed, D - deleted (but still visible)'
        created:
          type: string
          description: date that delivery note was created
          format: date-time
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentDeliveryNotePositionGET'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentDeliveryNoteTextGET'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextGET'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
              - manage
          description: |
            actions that can be performed on an item (possible values: view, edit, manage)
      xml:
        name: DocumentDeliveryNoteGET
    DocumentDeliveryNotePATCH:
      type: object
      xml:
        name: DocumentDeliveryNotePATCH
    DocumentDeliveryNotePOST:
      required:
        - contact_address_id
        - contact_id
        - currency
        - date
        - language
        - positions
      type: object
      properties:
        number:
          type: string
          description: 'unique number - default value: ''next free number'''
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the delivery note
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: 'whether prices in delivery note include VAT - default value:
            false'
        discount_rate:
          type: number
          description: 'optional discount rate - default value: 0.0'
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentDeliveryNotePositionPOST'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentDeliveryNoteTextPOST'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPOST'
      xml:
        name: DocumentDeliveryNotePOST
    DocumentDeliveryNotePUT:
      type: object
      properties:
        number:
          type: string
          description: unique number
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the delivery note
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: whether prices in delivery note include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentDeliveryNotePositionPUT'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentDeliveryNoteTextPUT'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPUT'
      xml:
        name: DocumentDeliveryNotePUT
    DocumentDeliveryNoteChangeStatusDELETE:
      type: object
      xml:
        name: DocumentDeliveryNoteChangeStatusDELETE
    DocumentDeliveryNoteChangeStatusGET:
      type: object
      xml:
        name: DocumentDeliveryNoteChangeStatusGET
    DocumentDeliveryNoteChangeStatusPATCH:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of delivery note, possible values: DR - draft, S -
            sent, B - billed, D - deleted (but still visible)'
        date_time:
          type: string
          description: optional date time of a change in Y-m-d H:i:s format (if none
            specified current date time will be taken)
          format: date-time
      xml:
        name: DocumentDeliveryNoteChangeStatusPATCH
    DocumentDeliveryNoteChangeStatusPOST:
      type: object
      xml:
        name: DocumentDeliveryNoteChangeStatusPOST
    DocumentDeliveryNoteChangeStatusPUT:
      type: object
      xml:
        name: DocumentDeliveryNoteChangeStatusPUT
    DocumentDeliveryNotePdfDELETE:
      type: object
      xml:
        name: DocumentDeliveryNotePdfDELETE
    DocumentDeliveryNotePdfGET:
      type: object
      xml:
        name: DocumentDeliveryNotePdfGET
    DocumentDeliveryNotePdfPATCH:
      type: object
      xml:
        name: DocumentDeliveryNotePdfPATCH
    DocumentDeliveryNotePdfPOST:
      type: object
      xml:
        name: DocumentDeliveryNotePdfPOST
    DocumentDeliveryNotePdfPUT:
      type: object
      xml:
        name: DocumentDeliveryNotePdfPUT
    DocumentDeliveryNotePositionDELETE:
      type: object
      xml:
        name: DocumentDeliveryNotePositionDELETE
    DocumentDeliveryNotePositionGET:
      required:
        - amount
        - catalog_type
        - description
        - discount_rate
        - discount_type
        - name
        - number
        - price
        - show_only_total
        - total
        - type
        - unit_id
        - vat
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        total:
          type: number
          description: total price
          format: float
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: DocumentDeliveryNotePositionGET
    DocumentDeliveryNotePositionPATCH:
      type: object
      xml:
        name: DocumentDeliveryNotePositionPATCH
    DocumentDeliveryNotePositionPOST:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: 'whether to show only total on invoice - default value: false'
      xml:
        name: DocumentDeliveryNotePositionPOST
    DocumentDeliveryNotePositionPUT:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: DocumentDeliveryNotePositionPUT
    DocumentDeliveryNotePreviewDELETE:
      type: object
      xml:
        name: DocumentDeliveryNotePreviewDELETE
    DocumentDeliveryNotePreviewGET:
      type: object
      properties:
        page:
          type: integer
          description: 'page number; possible values: 1 .. page amount'
        size:
          type: integer
          enum:
            - 240
            - 595
            - 600
            - 972
            - 1240
          default: 972
          description: 'width in pixels; possible values: 240, 595, 600, 972, 1240 '
      xml:
        name: DocumentDeliveryNotePreviewGET
    DocumentDeliveryNotePreviewPATCH:
      type: object
      xml:
        name: DocumentDeliveryNotePreviewPATCH
    DocumentDeliveryNotePreviewPOST:
      type: object
      xml:
        name: DocumentDeliveryNotePreviewPOST
    DocumentDeliveryNotePreviewPUT:
      type: object
      xml:
        name: DocumentDeliveryNotePreviewPUT
    DocumentDeliveryNoteSendByEmailDELETE:
      type: object
      xml:
        name: DocumentDeliveryNoteSendByEmailDELETE
    DocumentDeliveryNoteSendByEmailGET:
      type: object
      xml:
        name: DocumentDeliveryNoteSendByEmailGET
    DocumentDeliveryNoteSendByEmailPATCH:
      required:
        - body
        - recipients
        - subject
      type: object
      properties:
        subject:
          type: string
          description: email's subject
        body:
          type: string
          description: email's body
        recipients:
          type: array
          description: email's recipients
          items:
            $ref: '#/components/schemas/DocumentSendByEmailRecipientPATCH'
        from:
          type: string
          enum:
            - CO
            - U
            - S
            - CE
          description: |
            sender's email: if nothing specified, company's default will be applied;
            possible values:
            CO - company's email, U - user's email, S - company's SMTP email, CE - central email: no-reply@smallinvoice.com
      xml:
        name: DocumentDeliveryNoteSendByEmailPATCH
    DocumentDeliveryNoteSendByEmailPOST:
      type: object
      xml:
        name: DocumentDeliveryNoteSendByEmailPOST
    DocumentDeliveryNoteSendByEmailPUT:
      type: object
      xml:
        name: DocumentDeliveryNoteSendByEmailPUT
    DocumentDeliveryNoteTextDELETE:
      type: object
      xml:
        name: DocumentDeliveryNoteTextDELETE
    DocumentDeliveryNoteTextGET:
      required:
        - conditions
        - introduction
        - status
        - title
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of delivery note, possible values: DR - draft, S -
            sent, B - billed, D - deleted (but still visible)'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentDeliveryNoteTextGET
    DocumentDeliveryNoteTextPATCH:
      type: object
      xml:
        name: DocumentDeliveryNoteTextPATCH
    DocumentDeliveryNoteTextPOST:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of delivery note, possible values: DR - draft, S -
            sent, B - billed, D - deleted (but still visible)'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentDeliveryNoteTextPOST
    DocumentDeliveryNoteTextPUT:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of delivery note, possible values: DR - draft, S -
            sent, B - billed, D - deleted (but still visible)'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentDeliveryNoteTextPUT
    DocumentFreeTextDELETE:
      type: object
      xml:
        name: DocumentFreeTextDELETE
    DocumentFreeTextGET:
      required:
        - font_size
        - page
        - position_x
        - position_y
        - text
      type: object
      properties:
        text:
          type: string
          description: displayed text
        font_size:
          type: integer
          description: 'font size of displayed text (min: 1; max: 50)'
        position_x:
          type: number
          description: y coordinate of displayed text
          format: float
        position_y:
          type: number
          description: x coordinate of displayed text
          format: float
        page:
          type: integer
          description: which page text is displayed on
      xml:
        name: DocumentFreeTextGET
    DocumentFreeTextPATCH:
      type: object
      xml:
        name: DocumentFreeTextPATCH
    DocumentFreeTextPOST:
      required:
        - font_size
        - page
        - position_x
        - position_y
        - text
      type: object
      properties:
        text:
          type: string
          description: displayed text
        font_size:
          type: integer
          description: 'font size of displayed text (min: 1; max: 50)'
        position_x:
          type: number
          description: y coordinate of displayed text
          format: float
        position_y:
          type: number
          description: x coordinate of displayed text
          format: float
        page:
          type: integer
          description: which page text is displayed on
      xml:
        name: DocumentFreeTextPOST
    DocumentFreeTextPUT:
      required:
        - font_size
        - page
        - position_x
        - position_y
        - text
      type: object
      properties:
        text:
          type: string
          description: displayed text
        font_size:
          type: integer
          description: 'font size of displayed text (min: 1; max: 50)'
        position_x:
          type: number
          description: y coordinate of displayed text
          format: float
        position_y:
          type: number
          description: x coordinate of displayed text
          format: float
        page:
          type: integer
          description: which page text is displayed on
      xml:
        name: DocumentFreeTextPUT
    DocumentInvoicePaymentDELETE:
      type: object
      xml:
        name: DocumentInvoicePaymentDELETE
    DocumentInvoicePaymentGET:
      required:
        - amount
        - channel
        - created
        - date
        - id
        - notes
        - type
      type: object
      properties:
        id:
          type: integer
          description: payment id
        type:
          type: string
          enum:
            - N
            - C
            - D
            - W
          description: 'type of the payment; possible values: N - normal, C - cash
            discount, D - rounding difference, W - write off'
        channel:
          type: string
          enum:
            - T
            - C
            - PP
            - PF
            - CC
            - PR
            - SC
          description: 'channel of the payment; possible values: T - bank transfer,
            C - cash, PP - Paypal, PF - Postfinance, CC - Credit card, PR - Payrexx,
            SC - Smartcommerce'
        amount:
          type: number
          description: amount of the payment
          format: float
        date:
          type: string
          description: date that payment was made
          format: date
        notes:
          type: string
          description: optional notes
        created:
          type: string
          description: date that payment was created (in the system)
          format: date-time
      xml:
        name: DocumentInvoicePaymentGET
    DocumentInvoicePaymentPATCH:
      type: object
      xml:
        name: DocumentInvoicePaymentPATCH
    DocumentInvoicePaymentPOST:
      required:
        - amount
        - date
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - C
            - D
            - W
          description: 'type of the payment; possible values: N - normal, C - cash
            discount, D - rounding difference, W - write off'
        channel:
          type: string
          enum:
            - T
            - C
            - PP
            - PF
            - CC
            - PR
            - SC
          description: 'channel of the payment; possible values: T - bank transfer,
            C - cash, PP - Paypal, PF - Postfinance, CC - Credit card, PR - Payrexx,
            SC - Smartcommerce'
        amount:
          type: number
          description: amount of the payment
          format: float
        date:
          type: string
          description: date that payment was made
          format: date
        notes:
          type: string
          description: optional notes
      xml:
        name: DocumentInvoicePaymentPOST
    DocumentInvoicePaymentPUT:
      type: object
      properties:
        notes:
          type: string
          description: optional notes
      xml:
        name: DocumentInvoicePaymentPUT
    DocumentInvoicePdfDELETE:
      type: object
      xml:
        name: DocumentInvoicePdfDELETE
    DocumentInvoicePdfGET:
      type: object
      properties:
        options:
          $ref: '#/components/schemas/DocumentInvoicePdfOptionsGET'
      xml:
        name: DocumentInvoicePdfGET
    DocumentInvoicePdfPATCH:
      type: object
      xml:
        name: DocumentInvoicePdfPATCH
    DocumentInvoicePdfPOST:
      type: object
      xml:
        name: DocumentInvoicePdfPOST
    DocumentInvoicePdfPUT:
      type: object
      xml:
        name: DocumentInvoicePdfPUT
    DocumentInvoicePdfOptionsDELETE:
      type: object
      xml:
        name: DocumentInvoicePdfOptionsDELETE
    DocumentInvoicePdfOptionsGET:
      type: object
      properties:
        isr_ignore_custom_position:
          type: boolean
          description: whether to ignore ISR positioning set by user (false by default)
        isr_display_image:
          type: boolean
          description: whether to print ISR background image (false by default)
        receipt:
          type: boolean
          description: whether to get a receipt instead of an invoice (false by default)
      xml:
        name: DocumentInvoicePdfOptionsGET
    DocumentInvoicePdfOptionsPATCH:
      type: object
      xml:
        name: DocumentInvoicePdfOptionsPATCH
    DocumentInvoicePdfOptionsPOST:
      type: object
      xml:
        name: DocumentInvoicePdfOptionsPOST
    DocumentInvoicePdfOptionsPUT:
      type: object
      xml:
        name: DocumentInvoicePdfOptionsPUT
    DocumentInvoicePositionDELETE:
      type: object
      xml:
        name: DocumentInvoicePositionDELETE
    DocumentInvoicePositionGET:
      required:
        - amount
        - catalog_type
        - description
        - discount_rate
        - discount_type
        - name
        - number
        - price
        - show_only_total
        - total
        - type
        - unit_id
        - vat
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        total:
          type: number
          description: total price
          format: float
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: DocumentInvoicePositionGET
    DocumentInvoicePositionPATCH:
      type: object
      xml:
        name: DocumentInvoicePositionPATCH
    DocumentInvoicePositionPOST:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: 'whether to show only total on invoice - default value: false'
      xml:
        name: DocumentInvoicePositionPOST
    DocumentInvoicePositionPUT:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: DocumentInvoicePositionPUT
    DocumentInvoicePreviewDELETE:
      type: object
      xml:
        name: DocumentInvoicePreviewDELETE
    DocumentInvoicePreviewGET:
      type: object
      properties:
        page:
          type: integer
          description: 'page number; possible values: 1 .. page amount'
        size:
          type: integer
          enum:
            - 240
            - 595
            - 600
            - 972
            - 1240
          default: 972
          description: 'width in pixels; possible values: 240, 595, 600, 972, 1240 '
      xml:
        name: DocumentInvoicePreviewGET
    DocumentInvoicePreviewPATCH:
      type: object
      xml:
        name: DocumentInvoicePreviewPATCH
    DocumentInvoicePreviewPOST:
      type: object
      xml:
        name: DocumentInvoicePreviewPOST
    DocumentInvoicePreviewPUT:
      type: object
      xml:
        name: DocumentInvoicePreviewPUT
    DocumentInvoiceRecurringDELETE:
      type: object
      xml:
        name: DocumentInvoiceRecurringDELETE
    DocumentInvoiceRecurringGET:
      required:
        - bank_account_id
        - cash_discount_date
        - cash_discount_rate
        - contact_address_id
        - contact_id
        - contact_person_id
        - contact_prepage_address_id
        - created
        - currency
        - discount_rate
        - discount_type
        - end_date
        - frequency
        - grace
        - id
        - isr_id
        - isr_position
        - isr_reference_number
        - language
        - layout_id
        - notes
        - page_amount
        - payment_link_paypal
        - payment_link_paypal_url
        - payment_link_payrexx
        - payment_link_payrexx_url
        - payment_link_postfinance
        - payment_link_postfinance_url
        - payment_link_smartcommerce
        - payment_link_smartcommerce_url
        - period_text
        - signature_id
        - start_date
        - status
        - total
        - vat_included
      type: object
      properties:
        id:
          type: integer
          description: invoice id
        contact_id:
          type: integer
          description: id of a contact
        contact_name:
          type: string
          description: name of a contact
        contact:
          $ref: '#/components/schemas/ContactGET'
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_prepage_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_person_id:
          type: integer
          description: id of a contact's person
        contact_person:
          $ref: '#/components/schemas/ContactPeopleGET'
        start_date:
          type: string
          description: date of first execution of invoice
          format: date
        end_date:
          type: string
          description: date of latest execution of invoice
          format: date
        frequency:
          type: integer
          enum:
            - 1
            - 3
            - 6
            - 12
          description: 'frequency (number of months) of creating a standard invoice
            from recurring invoice; possible values: 1, 3, 6, 12'
        grace:
          type: integer
          description: payment deadline in days
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        total:
          type: number
          description: total amount of the invoice
          format: float
        vat_included:
          type: boolean
          description: whether prices in invoice include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        cash_discount_rate:
          type: integer
          description: cash discount value in %
        cash_discount_date:
          type: string
          description: cash discount deadline date
          format: date
        bank_account_id:
          type: integer
          description: bank account id
        bank_account:
          $ref: '#/components/schemas/ConfigurationBankAccountGET'
        isr_id:
          type: integer
          description: ISR id
        isr:
          $ref: '#/components/schemas/ReceivablesConfigurationIsrGET'
        isr_position:
          type: string
          enum:
            - A
            - F
            - L
          default: 'A'
          description: |
            ISR position;
            possible values: A - additional page, F - first page, L - last page
        isr_reference_number:
          type: string
          description: ISR reference number
        payment_link_paypal:
          type: boolean
          description: whether to print PayPal link on invoice
        payment_link_paypal_url:
          type: string
          description: PayPal link URL
        payment_link_postfinance:
          type: boolean
          description: whether to print PostFinance link on invoice
        payment_link_postfinance_url:
          type: string
          description: PostFinance link URL
        payment_link_payrexx:
          type: boolean
          description: whether to print Payrexx link on invoice
        payment_link_payrexx_url:
          type: string
          description: Payrexx link URL
        payment_link_smartcommerce:
          type: boolean
          description: whether to print SmartCommerce link on invoice
        payment_link_smartcommerce_url:
          type: string
          description: SmartCommerce link URL
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        page_amount:
          type: integer
          description: how many pages invoice has
        notes:
          type: string
          description: optional notes
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of delivery note, possible values: DR - draft, S -
            sent, B - billed, D - deleted (but still visible)'
        created:
          type: string
          description: date that invoice was created
          format: date-time
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentInvoicePositionGET'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceTextGET'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextGET'
        workflow:
          type: array
          description: workflow objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceWorkflowGET'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
              - manage
          description: |
            actions that can be performed on an item (possible values: view, edit, manage)
      xml:
        name: DocumentInvoiceRecurringGET
    DocumentInvoiceRecurringPATCH:
      type: object
      xml:
        name: DocumentInvoiceRecurringPATCH
    DocumentInvoiceRecurringPOST:
      required:
        - contact_address_id
        - contact_id
        - currency
        - frequency
        - grace
        - language
        - positions
        - start_date
      type: object
      properties:
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        start_date:
          type: string
          description: date of first execution of invoice
          format: date
        end_date:
          type: string
          description: date of latest execution of invoice
          format: date
        frequency:
          type: integer
          enum:
            - 1
            - 3
            - 6
            - 12
          description: 'frequency (number of months) of creating a standard invoice
            from recurring invoice; possible values: 1, 3, 6, 12'
        grace:
          type: integer
          description: payment deadline in days
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: 'whether prices in invoice include VAT - default value: false'
        discount_rate:
          type: number
          description: 'optional discount rate - default value: 0.0'
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        cash_discount_rate:
          type: integer
          description: cash discount value in %
        cash_discount_date:
          type: string
          description: cash discount deadline date
          format: date
        bank_account_id:
          type: integer
          description: bank account id
        isr_id:
          type: integer
          description: ISR id
        isr_position:
          type: string
          enum:
            - A
            - F
            - L
          default: 'A'
          description: |
            ISR position;
            possible values: A - additional page, F - first page, L - last page
        payment_link_paypal:
          type: boolean
          description: 'whether to print PayPal link on invoice - default value: false'
        payment_link_postfinance:
          type: boolean
          description: 'whether to print PostFinance link on invoice - default value:
            false'
        payment_link_payrexx:
          type: boolean
          description: 'whether to print Payrexx link on invoice - default value:
            false'
        payment_link_smartcommerce:
          type: boolean
          description: 'whether to print SmartCommerce link on invoice - default value:
            false'
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentInvoicePositionPOST'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceTextPOST'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPOST'
        workflow:
          type: array
          description: workflow objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceWorkflowPOST'
      xml:
        name: DocumentInvoiceRecurringPOST
    DocumentInvoiceRecurringPUT:
      type: object
      properties:
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        start_date:
          type: string
          description: date of first execution of invoice
          format: date
        end_date:
          type: string
          description: date of latest execution of invoice
          format: date
        frequency:
          type: integer
          enum:
            - 1
            - 3
            - 6
            - 12
          description: 'frequency (number of months) of creating a standard invoice
            from recurring invoice; possible values: 1, 3, 6, 12'
        grace:
          type: integer
          description: payment deadline in days
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: whether prices in invoice include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        cash_discount_rate:
          type: integer
          description: cash discount value in %
        cash_discount_date:
          type: string
          description: cash discount deadline date
          format: date
        bank_account_id:
          type: integer
          description: bank account id
        isr_id:
          type: integer
          description: ISR id
        isr_position:
          type: string
          enum:
            - A
            - F
            - L
          default: 'A'
          description: |
            ISR position;
            possible values: A - additional page, F - first page, L - last page
        payment_link_paypal:
          type: boolean
          description: whether to print PayPal link on invoice
        payment_link_postfinance:
          type: boolean
          description: whether to print PostFinance link on invoice
        payment_link_payrexx:
          type: boolean
          description: whether to print Payrexx link on invoice
        payment_link_smartcommerce:
          type: boolean
          description: whether to print SmartCommerce link on invoice
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentInvoicePositionPUT'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceTextPUT'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPUT'
        workflow:
          type: array
          description: workflow objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceWorkflowPUT'
      xml:
        name: DocumentInvoiceRecurringPUT
    DocumentInvoiceSendByEmailDELETE:
      type: object
      xml:
        name: DocumentInvoiceSendByEmailDELETE
    DocumentInvoiceSendByEmailGET:
      type: object
      xml:
        name: DocumentInvoiceSendByEmailGET
    DocumentInvoiceSendByEmailPATCH:
      required:
        - body
        - recipients
        - subject
      type: object
      properties:
        subject:
          type: string
          description: email's subject
        body:
          type: string
          description: email's body
        recipients:
          type: array
          description: email's recipients
          items:
            $ref: '#/components/schemas/DocumentSendByEmailRecipientPATCH'
        receipt:
          type: boolean
          description: whether to send a receipt instead of an invoice (false by default)
        from:
          type: string
          enum:
            - CO
            - U
            - S
            - CE
          description: |
            sender's email: if nothing specified, company's default will be applied;
            possible values:
            CO - company's email, U - user's email, S - company's SMTP email, CE - central email: no-reply@smallinvoice.com
      xml:
        name: DocumentInvoiceSendByEmailPATCH
    DocumentInvoiceSendByEmailPOST:
      type: object
      xml:
        name: DocumentInvoiceSendByEmailPOST
    DocumentInvoiceSendByEmailPUT:
      type: object
      xml:
        name: DocumentInvoiceSendByEmailPUT
    DocumentInvoiceStandardDELETE:
      type: object
      xml:
        name: DocumentInvoiceStandardDELETE
    DocumentInvoiceStandardGET:
      required:
        - bank_account_id
        - cash_discount_date
        - cash_discount_rate
        - contact_address_id
        - contact_id
        - contact_person_id
        - contact_prepage_address_id
        - created
        - currency
        - date
        - discount_rate
        - discount_type
        - due
        - id
        - isr_id
        - isr_position
        - isr_reference_number
        - language
        - layout_id
        - notes
        - number
        - page_amount
        - paid_date
        - payment_link_paypal
        - payment_link_paypal_url
        - payment_link_payrexx
        - payment_link_payrexx_url
        - payment_link_postfinance
        - payment_link_postfinance_url
        - payment_link_smartcommerce
        - payment_link_smartcommerce_url
        - period_from
        - period_text
        - period_to
        - signature_id
        - status
        - total
        - total_paid
        - vat_included
      type: object
      properties:
        id:
          type: integer
          description: invoice id
        number:
          type: string
          description: unique number
        contact_id:
          type: integer
          description: id of a contact
        contact_name:
          type: string
          description: name of a contact
        contact:
          $ref: '#/components/schemas/ContactGET'
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_prepage_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_person_id:
          type: integer
          description: id of a contact's person
        contact_person:
          $ref: '#/components/schemas/ContactPeopleGET'
        date:
          type: string
          description: date of the invoice
          format: date
        due:
          type: string
          description: due date of the invoice
          format: date
        period_from:
          type: string
          description: service period from
          format: date
        period_to:
          type: string
          description: service period to
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        total:
          type: number
          description: total amount of the invoice
          format: float
        vat_included:
          type: boolean
          description: whether prices in invoice include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        cash_discount_rate:
          type: integer
          description: cash discount value in %
        cash_discount_date:
          type: string
          description: cash discount deadline date
          format: date
        total_paid:
          type: number
          description: paid amount of the invoice
          format: float
        paid_date:
          type: string
          description: date when invoice was fully paid
          format: date
        bank_account_id:
          type: integer
          description: bank account id
        bank_account:
          $ref: '#/components/schemas/ConfigurationBankAccountGET'
        isr_id:
          type: integer
          description: ISR id
        isr:
          $ref: '#/components/schemas/ReceivablesConfigurationIsrGET'
        isr_position:
          type: string
          enum:
            - A
            - F
            - L
          default: 'A'
          description: |
            ISR position;
            possible values: A - additional page, F - first page, L - last page
        isr_reference_number:
          type: string
          description: ISR reference number
        payment_link_paypal:
          type: boolean
          description: whether to print PayPal link on invoice
        payment_link_paypal_url:
          type: string
          description: PayPal link URL
        payment_link_postfinance:
          type: boolean
          description: whether to print PostFinance link on invoice
        payment_link_postfinance_url:
          type: string
          description: PostFinance link URL
        payment_link_payrexx:
          type: boolean
          description: whether to print Payrexx link on invoice
        payment_link_payrexx_url:
          type: string
          description: Payrexx link URL
        payment_link_smartcommerce:
          type: boolean
          description: whether to print SmartCommerce link on invoice
        payment_link_smartcommerce_url:
          type: string
          description: SmartCommerce link URL
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        page_amount:
          type: integer
          description: how many pages invoice has
        notes:
          type: string
          description: optional notes
        status:
          type: string
          enum:
            - DR
            - S
            - P
            - R1
            - R2
            - R3
            - R
            - DC
            - C
            - D
          default: DR
          description: 'status of invoice, possible values: DR - draft, S - sent,
            P - paid, PP - partially paid, R1 - 1st reminder, R2 - 2nd reminder, R3
            - 3rd reminder, R - reminder, DC - debt collection, C - cancelled, D -
            deleted (but still visible)'
        created:
          type: string
          description: date that invoice was created
          format: date-time
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentInvoicePositionGET'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceTextGET'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextGET'
        workflow:
          type: array
          description: workflow objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceWorkflowGET'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
              - manage
          description: |
            actions that can be performed on an item (possible values: view, edit, manage)
      xml:
        name: DocumentInvoiceStandardGET
    DocumentInvoiceStandardPATCH:
      type: object
      xml:
        name: DocumentInvoiceStandardPATCH
    DocumentInvoiceStandardPOST:
      required:
        - contact_address_id
        - contact_id
        - currency
        - date
        - due
        - language
        - positions
      type: object
      properties:
        number:
          type: string
          description: 'unique number - default value: ''next free number'''
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the invoice
          format: date
        due:
          type: string
          description: due date of the invoice
          format: date
        period_from:
          type: string
          description: service period from
          format: date
        period_to:
          type: string
          description: service period to
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: 'whether prices in invoice include VAT - default value: false'
        discount_rate:
          type: number
          description: 'optional discount rate - default value: 0.0'
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        cash_discount_rate:
          type: integer
          description: cash discount value in %
        cash_discount_date:
          type: string
          description: cash discount deadline date
          format: date
        bank_account_id:
          type: integer
          description: bank account id
        isr_id:
          type: integer
          description: ISR id
        isr_position:
          type: string
          enum:
            - A
            - F
            - L
          default: 'A'
          description: |
            ISR position;
            possible values: A - additional page, F - first page, L - last page
        payment_link_paypal:
          type: boolean
          description: 'whether to print PayPal link on invoice - default value: false'
        payment_link_postfinance:
          type: boolean
          description: 'whether to print PostFinance link on invoice - default value:
            false'
        payment_link_payrexx:
          type: boolean
          description: 'whether to print Payrexx link on invoice - default value:
            false'
        payment_link_smartcommerce:
          type: boolean
          description: 'whether to print SmartCommerce link on invoice - default value:
            false'
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentInvoicePositionPOST'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceTextPOST'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPOST'
        workflow:
          type: array
          description: workflow objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceWorkflowPOST'
      xml:
        name: DocumentInvoiceStandardPOST
    DocumentInvoiceStandardPUT:
      type: object
      properties:
        number:
          type: string
          description: unique number
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the invoice
          format: date
        due:
          type: string
          description: due date of the invoice
          format: date
        period_from:
          type: string
          description: service period from
          format: date
        period_to:
          type: string
          description: service period to
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: whether prices in invoice include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        cash_discount_rate:
          type: integer
          description: cash discount value in %
        cash_discount_date:
          type: string
          description: cash discount deadline date
          format: date
        bank_account_id:
          type: integer
          description: bank account id
        isr_id:
          type: integer
          description: ISR id
        isr_position:
          type: string
          enum:
            - A
            - F
            - L
          default: 'A'
          description: |
            ISR position;
            possible values: A - additional page, F - first page, L - last page
        payment_link_paypal:
          type: boolean
          description: whether to print PayPal link on invoice
        payment_link_postfinance:
          type: boolean
          description: whether to print PostFinance link on invoice
        payment_link_payrexx:
          type: boolean
          description: whether to print Payrexx link on invoice
        payment_link_smartcommerce:
          type: boolean
          description: whether to print SmartCommerce link on invoice
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentInvoicePositionPUT'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceTextPUT'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPUT'
        workflow:
          type: array
          description: workflow objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceWorkflowPUT'
      xml:
        name: DocumentInvoiceStandardPUT
    DocumentInvoiceStandardChangeStatusDELETE:
      type: object
      xml:
        name: DocumentInvoiceStandardChangeStatusDELETE
    DocumentInvoiceStandardChangeStatusGET:
      type: object
      xml:
        name: DocumentInvoiceStandardChangeStatusGET
    DocumentInvoiceStandardChangeStatusPATCH:
      required:
        - status
      type: object
      properties:
        status:
          enum:
            - DR
            - S
            - P
            - R1
            - R2
            - R3
            - R
            - DC
            - C
            - D
          default: DR
          type: string
          description: 'status of invoice, possible values: DR - draft, S - sent,
            P - paid, PP - partially paid, R1 - 1st reminder, R2 - 2nd reminder, R3
            - 3rd reminder, R - reminder, DC - debt collection, C - cancelled, D -
            deleted (but still visible)'
        date_time:
          type: string
          description: optional date time of a change in Y-m-d H:i:s format (if none
            specified current date time will be taken)
          format: date-time
      xml:
        name: DocumentInvoiceStandardChangeStatusPATCH
    DocumentInvoiceStandardChangeStatusPOST:
      type: object
      xml:
        name: DocumentInvoiceStandardChangeStatusPOST
    DocumentInvoiceStandardChangeStatusPUT:
      type: object
      xml:
        name: DocumentInvoiceStandardChangeStatusPUT
    DocumentInvoiceTextDELETE:
      type: object
      xml:
        name: DocumentInvoiceTextDELETE
    DocumentInvoiceTextGET:
      required:
        - conditions
        - introduction
        - status
        - title
      type: object
      properties:
        status:
          enum:
            - D
            - R
            - R1
            - R2
            - R3
            - DC
            - RE
          default: D
          type: string
          description: 'status of a document that the texts are for; possible values:
            D - default, R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder,
            R3 - 3rd reminder, DC - debt collection, RE - receipt'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentInvoiceTextGET
    DocumentInvoiceTextPATCH:
      type: object
      xml:
        name: DocumentInvoiceTextPATCH
    DocumentInvoiceTextPOST:
      required:
        - status
      type: object
      properties:
        status:
          enum:
            - D
            - R
            - R1
            - R2
            - R3
            - DC
            - RE
          default: D
          type: string
          description: 'status of a document that the texts are for; possible values:
            D - default, R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder,
            R3 - 3rd reminder, DC - debt collection, RE - receipt'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentInvoiceTextPOST
    DocumentInvoiceTextPUT:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - D
            - R
            - R1
            - R2
            - R3
            - DC
            - RE
          default: D
          description: 'status of a document that the texts are for; possible values:
            D - default, R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder,
            R3 - 3rd reminder, DC - debt collection, RE - receipt'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentInvoiceTextPUT
    DocumentInvoiceWorkflowDELETE:
      type: object
      xml:
        name: DocumentInvoiceWorkflowDELETE
    DocumentInvoiceWorkflowGET:
      required:
        - action
        - active
        - contact_email
        - overdue_days
        - speed
        - status
      type: object
      properties:
        active:
          type: boolean
          description: whether workflow is active
        status:
          type: string
          enum:
            - R
            - R1
            - R2
            - R3
          description: 'status of a document that the workflow is for; possible values:
            R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder, R3 - 3rd reminder'
        overdue_days:
          type: integer
          description: how many days after due date action should be taken
        action:
          type: string
          enum:
            - M
            - CE
            - CP
          description: |
            action that should be taken;
            possible values:
            M - remind me, CE - remind contact by email, CP - remind contact by post
        contact_email:
          type: string
          description: email address for reminding contact (valid only when action
            is CE)
        speed:
          type: string
          enum:
            - P
            - E
          description: |
            post speed for reminding contact (valid only when action is CP);
            possible values:
            P - priority, E - economy
      xml:
        name: DocumentInvoiceWorkflowGET
    DocumentInvoiceWorkflowPATCH:
      type: object
      xml:
        name: DocumentInvoiceWorkflowPATCH
    DocumentInvoiceWorkflowPOST:
      required:
        - action
        - overdue_days
        - status
      type: object
      properties:
        active:
          type: boolean
          description: 'whether workflow is active - default value: false'
        status:
          type: string
          enum:
            - R
            - R1
            - R2
            - R3
          description: 'status of a document that the workflow is for; possible values:
            R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder, R3 - 3rd reminder'
        overdue_days:
          type: integer
          description: how many days after due date action should be taken
        action:
          type: string
          enum:
            - M
            - CE
            - CP
          description: |
            action that should be taken;
            possible values:
            M - remind me, CE - remind contact by email, CP - remind contact by post
        contact_email:
          type: string
          description: email address for reminding contact (valid only when action
            is CE)
        speed:
          type: string
          enum:
            - P
            - E
          description: |
            post speed for reminding contact (valid only when action is CP);
            possible values:
            P - priority, E - economy
      xml:
        name: DocumentInvoiceWorkflowPOST
    DocumentInvoiceWorkflowPUT:
      required:
        - action
        - overdue_days
        - status
      type: object
      properties:
        active:
          type: boolean
          description: whether workflow is active
        status:
          type: string
          enum:
            - R
            - R1
            - R2
            - R3
          description: 'status of a document that the workflow is for; possible values:
            R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder, R3 - 3rd reminder'
        overdue_days:
          type: integer
          description: how many days after due date action should be taken
        action:
          type: string
          enum:
            - M
            - CE
            - CP
          description: |
            action that should be taken;
            possible values:
            M - remind me, CE - remind contact by email, CP - remind contact by post
        contact_email:
          type: string
          description: email address for reminding contact (valid only when action
            is CE)
        speed:
          type: string
          enum:
            - P
            - E
          description: |
            post speed for reminding contact (valid only when action is CP);
            possible values:
            P - priority, E - economy
      xml:
        name: DocumentInvoiceWorkflowPUT
    DocumentLetterDELETE:
      type: object
      xml:
        name: DocumentLetterDELETE
    DocumentLetterGET:
      required:
        - contact_address_id
        - contact_id
        - contact_person_id
        - contact_prepage_address_id
        - content
        - created
        - date
        - id
        - language
        - layout_id
        - notes
        - page_amount
        - signature_id
        - status
        - title
      type: object
      properties:
        id:
          type: integer
          description: contact letter id
        contact_id:
          type: integer
          description: id of a contact
        contact_name:
          type: string
          description: name of a contact
        contact:
          $ref: '#/components/schemas/ContactGET'
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_prepage_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_person_id:
          type: integer
          description: id of a contact's person
        contact_person:
          $ref: '#/components/schemas/ContactPeopleGET'
        date:
          type: string
          description: date of the letter
          format: date
        title:
          type: string
          description: title of the letter
        content:
          type: string
          description: content of the letter
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        page_amount:
          type: integer
          description: how many pages letter has
        notes:
          type: string
          description: optional notes
        status:
          type: string
          enum:
            - DR
            - S
            - D
          description: 'status of letter, possible values: DR - draft, S - sent, D
            - deleted (but still visible)'
        created:
          type: string
          description: date that letter was created
          format: date-time
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextGET'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
              - manage
          description: |
            actions that can be performed on an item (possible values: view, edit, manage)
      xml:
        name: DocumentLetterGET
    DocumentLetterPATCH:
      type: object
      xml:
        name: DocumentLetterPATCH
    DocumentLetterPOST:
      required:
        - contact_address_id
        - contact_id
        - date
        - language
      type: object
      properties:
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the letter
          format: date
        title:
          type: string
          description: title of the letter
        content:
          type: string
          description: content of the letter
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPOST'
      xml:
        name: DocumentLetterPOST
    DocumentLetterPUT:
      type: object
      properties:
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the letter
          format: date
        title:
          type: string
          description: title of the letter
        content:
          type: string
          description: content of the letter
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPUT'
      xml:
        name: DocumentLetterPUT
    DocumentLetterChangeStatusDELETE:
      type: object
      xml:
        name: DocumentLetterChangeStatusDELETE
    DocumentLetterChangeStatusGET:
      type: object
      xml:
        name: DocumentLetterChangeStatusGET
    DocumentLetterChangeStatusPATCH:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - D
          description: 'status of letter, possible values: DR - draft, S - sent, D
            - deleted (but still visible)'
        date_time:
          type: string
          description: optional date time of a change in Y-m-d H:i:s format (if none
            specified current date time will be taken)
          format: date-time
      xml:
        name: DocumentLetterChangeStatusPATCH
    DocumentLetterChangeStatusPOST:
      type: object
      xml:
        name: DocumentLetterChangeStatusPOST
    DocumentLetterChangeStatusPUT:
      type: object
      xml:
        name: DocumentLetterChangeStatusPUT
    DocumentLetterPdfDELETE:
      type: object
      xml:
        name: DocumentLetterPdfDELETE
    DocumentLetterPdfGET:
      type: object
      xml:
        name: DocumentLetterPdfGET
    DocumentLetterPdfPATCH:
      type: object
      xml:
        name: DocumentLetterPdfPATCH
    DocumentLetterPdfPOST:
      type: object
      xml:
        name: DocumentLetterPdfPOST
    DocumentLetterPdfPUT:
      type: object
      xml:
        name: DocumentLetterPdfPUT
    DocumentLetterPreviewDELETE:
      type: object
      xml:
        name: DocumentLetterPreviewDELETE
    DocumentLetterPreviewGET:
      type: object
      properties:
        page:
          type: integer
          description: 'page number; possible values: 1 .. page amount'
        size:
          type: integer
          enum:
            - 240
            - 595
            - 600
            - 972
            - 1240
          default: 972
          description: 'width in pixels; possible values: 240, 595, 600, 972, 1240 '
      xml:
        name: DocumentLetterPreviewGET
    DocumentLetterPreviewPATCH:
      type: object
      xml:
        name: DocumentLetterPreviewPATCH
    DocumentLetterPreviewPOST:
      type: object
      xml:
        name: DocumentLetterPreviewPOST
    DocumentLetterPreviewPUT:
      type: object
      xml:
        name: DocumentLetterPreviewPUT
    DocumentLetterSendByEmailDELETE:
      type: object
      xml:
        name: DocumentLetterSendByEmailDELETE
    DocumentLetterSendByEmailGET:
      type: object
      xml:
        name: DocumentLetterSendByEmailGET
    DocumentLetterSendByEmailPATCH:
      required:
        - body
        - recipients
        - subject
      type: object
      properties:
        subject:
          type: string
          description: email's subject
        body:
          type: string
          description: email's body
        recipients:
          type: array
          description: email's recipients
          items:
            $ref: '#/components/schemas/DocumentSendByEmailRecipientPATCH'
        from:
          type: string
          enum:
            - CO
            - U
            - S
            - CE
          description: |
            sender's email: if nothing specified, company's default will be applied;
            possible values:
            CO - company's email, U - user's email, S - company's SMTP email, CE - central email: no-reply@smallinvoice.com
      xml:
        name: DocumentLetterSendByEmailPATCH
    DocumentLetterSendByEmailPOST:
      type: object
      xml:
        name: DocumentLetterSendByEmailPOST
    DocumentLetterSendByEmailPUT:
      type: object
      xml:
        name: DocumentLetterSendByEmailPUT
    DocumentOfferDELETE:
      type: object
      xml:
        name: DocumentOfferDELETE
    DocumentOfferGET:
      required:
        - accept_online
        - accept_online_status
        - accept_online_url
        - contact_address_id
        - contact_id
        - contact_person_id
        - contact_prepage_address_id
        - created
        - currency
        - date
        - discount_rate
        - discount_type
        - id
        - language
        - layout_id
        - notes
        - number
        - page_amount
        - period_text
        - signature_id
        - status
        - total
        - valid_until
        - vat_included
      type: object
      properties:
        id:
          type: integer
          description: offer id
        number:
          type: string
          description: unique number
        contact_id:
          type: integer
          description: id of a contact
        contact_name:
          type: string
          description: name of a contact
        contact:
          $ref: '#/components/schemas/ContactGET'
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_prepage_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_person_id:
          type: integer
          description: id of a contact's person
        contact_person:
          $ref: '#/components/schemas/ContactPeopleGET'
        date:
          type: string
          description: date of the offer
          format: date
        valid_until:
          type: string
          description: date that offer is valid until
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        total:
          type: number
          description: total amount of the offer
          format: float
        vat_included:
          type: boolean
          description: whether prices in offer include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        accept_online:
          type: boolean
          description: whether offer can be accepted online
        accept_online_url:
          type: string
          description: generated URL for accepting the offer online
        accept_online_status:
          type: string
          enum:
            - A
            - D
            - U
          description: 'status of offer''s acceptance; possible values: A - accepted,
            D - declined, U - unknown'
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        page_amount:
          type: integer
          description: how many pages offer has
        notes:
          type: string
          description: optional notes
        status:
          type: string
          enum:
            - DR
            - S
            - DE
            - A
            - B
            - D
          default: 'DR'
          description: 'status of offer, possible values: DR - draft, S - sent, DE
            - declined, A - accepted, B - billed, D - deleted (but still visible)'
        created:
          type: string
          description: date that offer was created
          format: date-time
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentOfferPositionGET'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentOfferTextGET'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextGET'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
              - manage
          description: |
            actions that can be performed on an item (possible values: view, edit, manage)
      xml:
        name: DocumentOfferGET
    DocumentOfferPATCH:
      type: object
      xml:
        name: DocumentOfferPATCH
    DocumentOfferPOST:
      required:
        - contact_address_id
        - contact_id
        - currency
        - date
        - language
        - positions
        - valid_until
      type: object
      properties:
        number:
          type: string
          description: 'unique number - default value: ''next free number'''
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the offer
          format: date
        valid_until:
          type: string
          description: date that offer is valid until
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: 'whether prices in offer include VAT - default value: false'
        discount_rate:
          type: number
          description: 'optional discount rate - default value: 0.0'
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        accept_online:
          type: boolean
          description: 'whether offer can be accepted online - default value: false'
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentOfferPositionPOST'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentOfferTextPOST'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPOST'
      xml:
        name: DocumentOfferPOST
    DocumentOfferPUT:
      type: object
      properties:
        number:
          type: string
          description: unique number
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the offer
          format: date
        valid_until:
          type: string
          description: date that offer is valid until
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: whether prices in offer include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        accept_online:
          type: boolean
          description: whether offer can be accepted online
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentOfferPositionPUT'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentOfferTextPUT'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPUT'
      xml:
        name: DocumentOfferPUT
    DocumentOfferChangeStatusDELETE:
      type: object
      xml:
        name: DocumentOfferChangeStatusDELETE
    DocumentOfferChangeStatusGET:
      type: object
      xml:
        name: DocumentOfferChangeStatusGET
    DocumentOfferChangeStatusPATCH:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - DE
            - A
            - B
            - D
          default: 'DR'
          description: 'status of offer, possible values: DR - draft, S - sent, DE
            - declined, A - accepted, B - billed, D - deleted (but still visible)'
        date_time:
          type: string
          description: optional date time of a change in Y-m-d H:i:s format (if none
            specified current date time will be taken)
          format: date-time
      xml:
        name: DocumentOfferChangeStatusPATCH
    DocumentOfferChangeStatusPOST:
      type: object
      xml:
        name: DocumentOfferChangeStatusPOST
    DocumentOfferChangeStatusPUT:
      type: object
      xml:
        name: DocumentOfferChangeStatusPUT
    DocumentOfferPdfDELETE:
      type: object
      xml:
        name: DocumentOfferPdfDELETE
    DocumentOfferPdfGET:
      type: object
      xml:
        name: DocumentOfferPdfGET
    DocumentOfferPdfPATCH:
      type: object
      xml:
        name: DocumentOfferPdfPATCH
    DocumentOfferPdfPOST:
      type: object
      xml:
        name: DocumentOfferPdfPOST
    DocumentOfferPdfPUT:
      type: object
      xml:
        name: DocumentOfferPdfPUT
    DocumentOfferPositionDELETE:
      type: object
      xml:
        name: DocumentOfferPositionDELETE
    DocumentOfferPositionGET:
      required:
        - amount
        - catalog_type
        - description
        - discount_rate
        - discount_type
        - name
        - number
        - price
        - show_only_total
        - total
        - type
        - unit_id
        - vat
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        total:
          type: number
          description: total price
          format: float
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: DocumentOfferPositionGET
    DocumentOfferPositionPATCH:
      type: object
      xml:
        name: DocumentOfferPositionPATCH
    DocumentOfferPositionPOST:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: 'whether to show only total on invoice - default value: false'
      xml:
        name: DocumentOfferPositionPOST
    DocumentOfferPositionPUT:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: DocumentOfferPositionPUT
    DocumentOfferPreviewDELETE:
      type: object
      xml:
        name: DocumentOfferPreviewDELETE
    DocumentOfferPreviewGET:
      type: object
      properties:
        page:
          type: integer
          description: 'page number; possible values: 1 .. page amount'
        size:
          type: integer
          enum:
            - 240
            - 595
            - 600
            - 972
            - 1240
          default: 972
          description: 'width in pixels; possible values: 240, 595, 600, 972, 1240 '
      xml:
        name: DocumentOfferPreviewGET
    DocumentOfferPreviewPATCH:
      type: object
      xml:
        name: DocumentOfferPreviewPATCH
    DocumentOfferPreviewPOST:
      type: object
      xml:
        name: DocumentOfferPreviewPOST
    DocumentOfferPreviewPUT:
      type: object
      xml:
        name: DocumentOfferPreviewPUT
    DocumentOfferSendByEmailDELETE:
      type: object
      xml:
        name: DocumentOfferSendByEmailDELETE
    DocumentOfferSendByEmailGET:
      type: object
      xml:
        name: DocumentOfferSendByEmailGET
    DocumentOfferSendByEmailPATCH:
      required:
        - body
        - recipients
        - subject
      type: object
      properties:
        subject:
          type: string
          description: email's subject
        body:
          type: string
          description: email's body
        recipients:
          type: array
          description: email's recipients
          items:
            $ref: '#/components/schemas/DocumentSendByEmailRecipientPATCH'
        from:
          type: string
          enum:
            - CO
            - U
            - S
            - CE
          description: |
            sender's email: if nothing specified, company's default will be applied;
            possible values:
            CO - company's email, U - user's email, S - company's SMTP email, CE - central email: no-reply@smallinvoice.com
      xml:
        name: DocumentOfferSendByEmailPATCH
    DocumentOfferSendByEmailPOST:
      type: object
      xml:
        name: DocumentOfferSendByEmailPOST
    DocumentOfferSendByEmailPUT:
      type: object
      xml:
        name: DocumentOfferSendByEmailPUT
    DocumentOfferTextDELETE:
      type: object
      xml:
        name: DocumentOfferTextDELETE
    DocumentOfferTextGET:
      required:
        - conditions
        - introduction
        - status
        - title
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - DE
            - A
            - B
            - D
          default: 'DR'
          description: 'status of offer, possible values: DR - draft, S - sent, DE
            - declined, A - accepted, B - billed, D - deleted (but still visible)'

        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentOfferTextGET
    DocumentOfferTextPATCH:
      type: object
      xml:
        name: DocumentOfferTextPATCH
    DocumentOfferTextPOST:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - DE
            - A
            - B
            - D
          default: 'DR'
          description: 'status of offer, possible values: DR - draft, S - sent, DE
            - declined, A - accepted, B - billed, D - deleted (but still visible)'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentOfferTextPOST
    DocumentOfferTextPUT:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - DE
            - A
            - B
            - D
          default: 'DR'
          description: 'status of offer, possible values: DR - draft, S - sent, DE
            - declined, A - accepted, B - billed, D - deleted (but still visible)'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentOfferTextPUT
    DocumentOrderConfirmationDELETE:
      type: object
      xml:
        name: DocumentOrderConfirmationDELETE
    DocumentOrderConfirmationGET:
      required:
        - contact_address_id
        - contact_id
        - contact_person_id
        - contact_prepage_address_id
        - created
        - currency
        - date
        - discount_rate
        - discount_type
        - id
        - language
        - layout_id
        - notes
        - number
        - page_amount
        - period_text
        - signature_id
        - status
        - total
        - vat_included
      type: object
      properties:
        id:
          type: integer
          description: order confirmation id
        number:
          type: string
          description: unique number
        contact_id:
          type: integer
          description: id of a contact
        contact_name:
          type: string
          description: name of a contact
        contact:
          $ref: '#/components/schemas/ContactGET'
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_prepage_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_person_id:
          type: integer
          description: id of a contact's person
        contact_person:
          $ref: '#/components/schemas/ContactPeopleGET'
        date:
          type: string
          description: date of the order confirmation
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        total:
          type: number
          description: total amount of the order confirmation
          format: float
        vat_included:
          type: boolean
          description: whether prices in order confirmation include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        page_amount:
          type: integer
          description: how many pages order confirmation has
        notes:
          type: string
          description: optional notes
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of order confirmation, possible values: DR - draft,
            S - sent, B - billed, D - deleted (but still visible)'
        created:
          type: string
          description: date that order confirmation was created
          format: date-time
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentOrderConfirmationPositionGET'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentOrderConfirmationTextGET'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextGET'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
              - manage
          description: |
            actions that can be performed on an item (possible values: view, edit, manage)
      xml:
        name: DocumentOrderConfirmationGET
    DocumentOrderConfirmationPATCH:
      type: object
      xml:
        name: DocumentOrderConfirmationPATCH
    DocumentOrderConfirmationPOST:
      required:
        - contact_address_id
        - contact_id
        - currency
        - date
        - language
        - positions
      type: object
      properties:
        number:
          type: string
          description: 'unique number - default value: ''next free number'''
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the order confirmation
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: 'whether prices in order confirmation include VAT - default
            value: false'
        discount_rate:
          type: number
          description: 'optional discount rate - default value: 0.0'
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentOrderConfirmationPositionPOST'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentOrderConfirmationTextPOST'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPOST'
      xml:
        name: DocumentOrderConfirmationPOST
    DocumentOrderConfirmationPUT:
      type: object
      properties:
        number:
          type: string
          description: unique number
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        date:
          type: string
          description: date of the order confirmation
          format: date
        period_text:
          type: string
          description: service/delivery
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        vat_included:
          type: boolean
          description: whether prices in order confirmation include VAT
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        signature_id:
          type: integer
          description: signature id
        layout_id:
          type: integer
          description: layout id
        notes:
          type: string
          description: optional notes
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentOrderConfirmationPositionPUT'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentOrderConfirmationTextPUT'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPUT'
      xml:
        name: DocumentOrderConfirmationPUT
    DocumentOrderConfirmationChangeStatusDELETE:
      type: object
      xml:
        name: DocumentOrderConfirmationChangeStatusDELETE
    DocumentOrderConfirmationChangeStatusGET:
      type: object
      xml:
        name: DocumentOrderConfirmationChangeStatusGET
    DocumentOrderConfirmationChangeStatusPATCH:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of order confirmation, possible values: DR - draft,
            S - sent, B - billed, D - deleted (but still visible)'
        date_time:
          type: string
          description: optional date time of a change in Y-m-d H:i:s format (if none
            specified current date time will be taken)
          format: date-time
      xml:
        name: DocumentOrderConfirmationChangeStatusPATCH
    DocumentOrderConfirmationChangeStatusPOST:
      type: object
      xml:
        name: DocumentOrderConfirmationChangeStatusPOST
    DocumentOrderConfirmationChangeStatusPUT:
      type: object
      xml:
        name: DocumentOrderConfirmationChangeStatusPUT
    DocumentOrderConfirmationPdfDELETE:
      type: object
      xml:
        name: DocumentOrderConfirmationPdfDELETE
    DocumentOrderConfirmationPdfGET:
      type: object
      xml:
        name: DocumentOrderConfirmationPdfGET
    DocumentOrderConfirmationPdfPATCH:
      type: object
      xml:
        name: DocumentOrderConfirmationPdfPATCH
    DocumentOrderConfirmationPdfPOST:
      type: object
      xml:
        name: DocumentOrderConfirmationPdfPOST
    DocumentOrderConfirmationPdfPUT:
      type: object
      xml:
        name: DocumentOrderConfirmationPdfPUT
    DocumentOrderConfirmationPositionDELETE:
      type: object
      xml:
        name: DocumentOrderConfirmationPositionDELETE
    DocumentOrderConfirmationPositionGET:
      required:
        - amount
        - catalog_type
        - description
        - discount_rate
        - discount_type
        - name
        - number
        - price
        - show_only_total
        - total
        - type
        - unit_id
        - vat
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        total:
          type: number
          description: total price
          format: float
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: DocumentOrderConfirmationPositionGET
    DocumentOrderConfirmationPositionPATCH:
      type: object
      xml:
        name: DocumentOrderConfirmationPositionPATCH
    DocumentOrderConfirmationPositionPOST:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: 'whether to show only total on invoice - default value: false'
      xml:
        name: DocumentOrderConfirmationPositionPOST
    DocumentOrderConfirmationPositionPUT:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: DocumentOrderConfirmationPositionPUT
    DocumentOrderConfirmationPreviewDELETE:
      type: object
      xml:
        name: DocumentOrderConfirmationPreviewDELETE
    DocumentOrderConfirmationPreviewGET:
      type: object
      properties:
        page:
          type: integer
          description: 'page number; possible values: 1 .. page amount'
        size:
          type: integer
          enum:
            - 240
            - 595
            - 600
            - 972
            - 1240
          default: 972
          description: 'width in pixels; possible values: 240, 595, 600, 972, 1240 '
      xml:
        name: DocumentOrderConfirmationPreviewGET
    DocumentOrderConfirmationPreviewPATCH:
      type: object
      xml:
        name: DocumentOrderConfirmationPreviewPATCH
    DocumentOrderConfirmationPreviewPOST:
      type: object
      xml:
        name: DocumentOrderConfirmationPreviewPOST
    DocumentOrderConfirmationPreviewPUT:
      type: object
      xml:
        name: DocumentOrderConfirmationPreviewPUT
    DocumentOrderConfirmationSendByEmailDELETE:
      type: object
      xml:
        name: DocumentOrderConfirmationSendByEmailDELETE
    DocumentOrderConfirmationSendByEmailGET:
      type: object
      xml:
        name: DocumentOrderConfirmationSendByEmailGET
    DocumentOrderConfirmationSendByEmailPATCH:
      required:
        - body
        - recipients
        - subject
      type: object
      properties:
        subject:
          type: string
          description: email's subject
        body:
          type: string
          description: email's body
        recipients:
          type: array
          description: email's recipients
          items:
            $ref: '#/components/schemas/DocumentSendByEmailRecipientPATCH'
        from:
          type: string
          enum:
            - CO
            - U
            - S
            - CE
          description: |
            sender's email: if nothing specified, company's default will be applied;
            possible values:
            CO - company's email, U - user's email, S - company's SMTP email, CE - central email: no-reply@smallinvoice.com
      xml:
        name: DocumentOrderConfirmationSendByEmailPATCH
    DocumentOrderConfirmationSendByEmailPOST:
      type: object
      xml:
        name: DocumentOrderConfirmationSendByEmailPOST
    DocumentOrderConfirmationSendByEmailPUT:
      type: object
      xml:
        name: DocumentOrderConfirmationSendByEmailPUT
    DocumentOrderConfirmationTextDELETE:
      type: object
      xml:
        name: DocumentOrderConfirmationTextDELETE
    DocumentOrderConfirmationTextGET:
      required:
        - conditions
        - introduction
        - status
        - title
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of order confirmation, possible values: DR - draft,
            S - sent, B - billed, D - deleted (but still visible)'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentOrderConfirmationTextGET
    DocumentOrderConfirmationTextPATCH:
      type: object
      xml:
        name: DocumentOrderConfirmationTextPATCH
    DocumentOrderConfirmationTextPOST:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of order confirmation, possible values: DR - draft,
            S - sent, B - billed, D - deleted (but still visible)'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentOrderConfirmationTextPOST
    DocumentOrderConfirmationTextPUT:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - DR
            - S
            - B
            - D
          default: 'DR'
          description: 'status of order confirmation, possible values: DR - draft,
            S - sent, B - billed, D - deleted (but still visible)'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentOrderConfirmationTextPUT
    DocumentPdfDELETE:
      type: object
      xml:
        name: DocumentPdfDELETE
    DocumentPdfGET:
      type: object
      xml:
        name: DocumentPdfGET
    DocumentPdfPATCH:
      type: object
      xml:
        name: DocumentPdfPATCH
    DocumentPdfPOST:
      type: object
      xml:
        name: DocumentPdfPOST
    DocumentPdfPUT:
      type: object
      xml:
        name: DocumentPdfPUT
    DocumentPdfOptionsDELETE:
      type: object
      xml:
        name: DocumentPdfOptionsDELETE
    DocumentPdfOptionsGET:
      type: object
      xml:
        name: DocumentPdfOptionsGET
    DocumentPdfOptionsPATCH:
      type: object
      xml:
        name: DocumentPdfOptionsPATCH
    DocumentPdfOptionsPOST:
      type: object
      xml:
        name: DocumentPdfOptionsPOST
    DocumentPdfOptionsPUT:
      type: object
      xml:
        name: DocumentPdfOptionsPUT
    DocumentPreviewDELETE:
      type: object
      xml:
        name: DocumentPreviewDELETE
    DocumentPreviewGET:
      type: object
      properties:
        page:
          type: integer
          description: 'page number; possible values: 1 .. page amount'
        size:
          type: integer
          enum:
            - 240
            - 595
            - 600
            - 972
            - 1240
          default: 972
          description: 'width in pixels; possible values: 240, 595, 600, 972, 1240 '
      xml:
        name: DocumentPreviewGET
    DocumentPreviewPATCH:
      type: object
      xml:
        name: DocumentPreviewPATCH
    DocumentPreviewPOST:
      type: object
      xml:
        name: DocumentPreviewPOST
    DocumentPreviewPUT:
      type: object
      xml:
        name: DocumentPreviewPUT
    DocumentSendByEmailDELETE:
      type: object
      xml:
        name: DocumentSendByEmailDELETE
    DocumentSendByEmailGET:
      type: object
      xml:
        name: DocumentSendByEmailGET
    DocumentSendByEmailPATCH:
      required:
        - body
        - recipients
        - subject
      type: object
      properties:
        subject:
          type: string
          description: email's subject
        body:
          type: string
          description: email's body
        recipients:
          type: array
          description: email's recipients
          items:
            $ref: '#/components/schemas/DocumentSendByEmailRecipientPATCH'
        from:
          type: string
          enum:
            - CO
            - U
            - S
            - CE
          description: |
            sender's email: if nothing specified, company's default will be applied;
            possible values:
            CO - company's email, U - user's email, S - company's SMTP email, CE - central email: no-reply@smallinvoice.com
      xml:
        name: DocumentSendByEmailPATCH
    DocumentSendByEmailPOST:
      type: object
      xml:
        name: DocumentSendByEmailPOST
    DocumentSendByEmailPUT:
      type: object
      xml:
        name: DocumentSendByEmailPUT
    DocumentSendByEmailRecipientDELETE:
      type: object
      xml:
        name: DocumentSendByEmailRecipientDELETE
    DocumentSendByEmailRecipientGET:
      type: object
      xml:
        name: DocumentSendByEmailRecipientGET
    DocumentSendByEmailRecipientPATCH:
      required:
        - email
        - name
      type: object
      properties:
        email:
          type: string
          description: recipients's email address
        name:
          type: string
          description: recipient's name
      xml:
        name: DocumentSendByEmailRecipientPATCH
    DocumentSendByEmailRecipientPOST:
      type: object
      xml:
        name: DocumentSendByEmailRecipientPOST
    DocumentSendByEmailRecipientPUT:
      type: object
      xml:
        name: DocumentSendByEmailRecipientPUT
    DocumentSendByPostDELETE:
      type: object
      xml:
        name: DocumentSendByPostDELETE
    DocumentSendByPostGET:
      type: object
      xml:
        name: DocumentSendByPostGET
    DocumentSendByPostPATCH:
      required:
        - palette
        - print
        - speed
      type: object
      properties:
        palette:
          type: string
          enum:
            - C
            - BW
          description: 'palette; possible values: C - colour, BW - black&white'
        print:
          type: string
          enum:
            - D
            - S
          description: 'printing type; possible values: D - duplex (two-sided), S
            - simplex (one-sided)'
        speed:
          type: string
          enum:
            - P
            - E
          description: |
            post speed for reminding contact (valid only when action is CP);
            possible values:
            P - priority, E - economy
      xml:
        name: DocumentSendByPostPATCH
    DocumentSendByPostPOST:
      type: object
      xml:
        name: DocumentSendByPostPOST
    DocumentSendByPostPUT:
      type: object
      xml:
        name: DocumentSendByPostPUT
    DocumentTextDELETE:
      type: object
      xml:
        name: DocumentTextDELETE
    DocumentTextGET:
      required:
        - conditions
        - introduction
        - status
        - title
      type: object
      properties:
        status:
          type: string
          enum:
            - D
            - R
            - R1
            - R2
            - R3
            - DC
            - RE
          default: 'D'
          description: 'status of a document that the texts are for; possible values:
            D - default, R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder,
            R3 - 3rd reminder, DC - debt collection, RE - receipt'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentTextGET
    DocumentTextPATCH:
      type: object
      xml:
        name: DocumentTextPATCH
    DocumentTextPOST:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - D
            - R
            - R1
            - R2
            - R3
            - DC
            - RE
          default: 'D'
          description: 'status of a document that the texts are for; possible values:
            D - default, R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder,
            R3 - 3rd reminder, DC - debt collection, RE - receipt'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentTextPOST
    DocumentTextPUT:
      required:
        - status
      type: object
      properties:
        status:
          type: string
          enum:
            - D
            - R
            - R1
            - R2
            - R3
            - DC
            - RE
          default: 'D'
          description: 'status of a document that the texts are for; possible values:
            D - default, R - payment reminder, R1 - 1st reminder, R2 - 2nd reminder,
            R3 - 3rd reminder, DC - debt collection, RE - receipt'
        title:
          type: string
          description: text of title
        introduction:
          type: string
          description: text of introduction
        conditions:
          type: string
          description: text of conditions
      xml:
        name: DocumentTextPUT
    InvoiceDELETE:
      type: object
      xml:
        name: InvoiceDELETE
    InvoiceGET:
      required:
        - bank_account_id
        - cash_discount_date
        - cash_discount_rate
        - contact_address_id
        - contact_id
        - contact_person_id
        - contact_prepage_address_id
        - created
        - currency
        - discount_rate
        - discount_type
        - id
        - isr_id
        - isr_position
        - isr_reference_number
        - language
        - layout_id
        - notes
        - page_amount
        - payment_link_paypal
        - payment_link_paypal_url
        - payment_link_payrexx
        - payment_link_payrexx_url
        - payment_link_postfinance
        - payment_link_postfinance_url
        - payment_link_smartcommerce
        - payment_link_smartcommerce_url
        - period_text
        - signature_id
        - status
        - total
        - vat_included
      type: object
      properties:
        id:
          type: integer
          description: invoice id
        contact_id:
          type: integer
          description: id of a contact
        contact_name:
          type: string
          description: name of a contact
        contact:
          $ref: '#/components/schemas/ContactGET'
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_prepage_address:
          $ref: '#/components/schemas/ContactAddressGET'
        contact_person_id:
          type: integer
          description: id of a contact's person
        contact_person:
          $ref: '#/components/schemas/ContactPeopleGET'
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        total:
          type: number
          description: total amount of the invoice
          format: float
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        isr_reference_number:
          type: string
          description: ISR reference number
        status:
          type: string
          enum:
            - DR
            - S
            - P
            - PP
            - R1
            - R2
            - R3
            - R
            - DC
            - C
            - D
          default: 'DR'
          description: 'status of invoice, possible values: DR - draft, S - sent,
            P - paid, PP - partially paid, R1 - 1st reminder, R2 - 2nd reminder, R3
            - 3rd reminder, R - reminder, DC - debt collection, C - cancelled, D -
            deleted (but still visible)'
        isr_id:
          type: integer
          description: ISR id
        isr:
          $ref: '#/components/schemas/ReceivablesConfigurationIsrGET'
        isr_position:
          type: string
          enum:
            - A
            - F
            - L
          default: 'A'
          description: |
            ISR position;
            possible values: A - additional page, F - first page, L - last page
        payment_link_paypal:
          type: boolean
          description: whether to print PayPal link on invoice
        payment_link_paypal_url:
          type: string
          description: PayPal link URL
        payment_link_postfinance:
          type: boolean
          description: whether to print PostFinance link on invoice
        payment_link_postfinance_url:
          type: string
          description: PostFinance link URL
        payment_link_payrexx:
          type: boolean
          description: whether to print Payrexx link on invoice
        payment_link_payrexx_url:
          type: string
          description: Payrexx link URL
        payment_link_smartcommerce:
          type: boolean
          description: whether to print SmartCommerce link on invoice
        payment_link_smartcommerce_url:
          type: string
          description: SmartCommerce link URL
        bank_account_id:
          type: integer
          description: bank account id
        bank_account:
          $ref: '#/components/schemas/ConfigurationBankAccountGET'
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        page_amount:
          type: integer
          description: how many pages invoice has
        layout_id:
          type: integer
          description: layout id
        period_text:
          type: string
          description: service/delivery
        vat_included:
          type: boolean
          description: whether prices in invoice include VAT
        signature_id:
          type: integer
          description: signature id
        notes:
          type: string
          description: optional notes
        created:
          type: string
          description: date that invoice was created
          format: date-time
        cash_discount_rate:
          type: integer
          description: cash discount value in %
        cash_discount_date:
          type: string
          description: cash discount deadline date
          format: date
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldGET'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentInvoicePositionGET'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceTextGET'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextGET'
        workflow:
          type: array
          description: workflow objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceWorkflowGET'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
              - manage
          description: |
            actions that can be performed on an item (possible values: view, edit, manage)
      xml:
        name: InvoiceGET
    InvoicePATCH:
      type: object
      xml:
        name: InvoicePATCH
    InvoicePOST:
      required:
        - contact_address_id
        - contact_id
        - currency
        - language
        - positions
      type: object
      properties:
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        discount_rate:
          type: number
          description: 'optional discount rate - default value: 0.0'
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        isr_id:
          type: integer
          description: ISR id
        isr_position:
          type: string
          enum:
            - A
            - F
            - L
          default: 'A'
          description: |
            ISR position;
            possible values: A - additional page, F - first page, L - last page
        payment_link_paypal:
          type: boolean
          description: 'whether to print PayPal link on invoice - default value: false'
        payment_link_postfinance:
          type: boolean
          description: 'whether to print PostFinance link on invoice - default value:
            false'
        payment_link_payrexx:
          type: boolean
          description: 'whether to print Payrexx link on invoice - default value:
            false'
        payment_link_smartcommerce:
          type: boolean
          description: 'whether to print SmartCommerce link on invoice - default value:
            false'
        bank_account_id:
          type: integer
          description: bank account id
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        layout_id:
          type: integer
          description: layout id
        period_text:
          type: string
          description: service/delivery
        vat_included:
          type: boolean
          description: 'whether prices in invoice include VAT - default value: false'
        signature_id:
          type: integer
          description: signature id
        notes:
          type: string
          description: optional notes
        cash_discount_rate:
          type: integer
          description: cash discount value in %
        cash_discount_date:
          type: string
          description: cash discount deadline date
          format: date
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPOST'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentInvoicePositionPOST'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceTextPOST'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPOST'
        workflow:
          type: array
          description: workflow objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceWorkflowPOST'
      xml:
        name: InvoicePOST
    InvoicePUT:
      type: object
      properties:
        contact_id:
          type: integer
          description: id of a contact
        contact_address_id:
          type: integer
          description: id of a contact's address
        contact_prepage_address_id:
          type: integer
          description: id of a contact's prepage address
        contact_person_id:
          type: integer
          description: id of a contact's person
        currency:
          type: string
          description: currency (e.g. CHF, EUR)
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        isr_id:
          type: integer
          description: ISR id
        isr_position:
          type: string
          enum:
            - A
            - F
            - L
          default: 'A'
          description: |
            ISR position;
            possible values: A - additional page, F - first page, L - last page
        payment_link_paypal:
          type: boolean
          description: whether to print PayPal link on invoice
        payment_link_postfinance:
          type: boolean
          description: whether to print PostFinance link on invoice
        payment_link_payrexx:
          type: boolean
          description: whether to print Payrexx link on invoice
        payment_link_smartcommerce:
          type: boolean
          description: whether to print SmartCommerce link on invoice
        bank_account_id:
          type: integer
          description: bank account id
        language:
          type: string
          enum:
            - de
            - en
            - es
            - fr
            - it
          description: |
            language; possible values: de, en, es, fr, it
        layout_id:
          type: integer
          description: layout id
        period_text:
          type: string
          description: service/delivery
        vat_included:
          type: boolean
          description: whether prices in invoice include VAT
        signature_id:
          type: integer
          description: signature id
        notes:
          type: string
          description: optional notes
        cash_discount_rate:
          type: integer
          description: cash discount value in %
        cash_discount_date:
          type: string
          description: cash discount deadline date
          format: date
        custom_fields:
          type: array
          description: custom fields values
          items:
            $ref: '#/components/schemas/DescriptiveCustomFieldPUT'
        positions:
          type: array
          description: positions objects
          items:
            $ref: '#/components/schemas/DocumentInvoicePositionPUT'
        texts:
          type: array
          description: texts objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceTextPUT'
        free_texts:
          type: array
          description: free texts objects
          items:
            $ref: '#/components/schemas/DocumentFreeTextPUT'
        workflow:
          type: array
          description: workflow objects
          items:
            $ref: '#/components/schemas/DocumentInvoiceWorkflowPUT'
      xml:
        name: InvoicePUT
    Oauth2ClientDELETE:
      type: object
      xml:
        name: Oauth2ClientDELETE
    Oauth2ClientGET:
      required:
        - created
        - grant_type
        - id
        - identifier
        - name
        - redirect_uri
        - revoked
        - scopes
      type: object
      properties:
        id:
          type: integer
          description: oauth client id (system id)
        identifier:
          type: string
          description: oauth client identifier (THE CLIENT ID used for authorization)
        name:
          type: string
          description: oauth client name (unique in the whole system)
        grant_type:
          type: string
          enum:
            - CC
            - AC
          description: 'oauth client grant type; possible values: CC - client credentials,
            AC - authorization code'
        redirect_uri:
          type: string
          description: oauth client redirect URI (only for grant type authorization
            code)
        scopes:
          type: array
          description: oauth client scopes
          items:
            type: string
        revoked:
          type: boolean
          description: is oauth client revoked
        created:
          type: string
          description: when was oauth client created
          format: date-time
      xml:
        name: Oauth2ClientGET
    Oauth2ClientPATCH:
      type: object
      xml:
        name: Oauth2ClientPATCH
    Oauth2ClientPOST:
      required:
        - grant_type
        - name
      type: object
      properties:
        name:
          type: string
          description: oauth client name (unique in the whole system)
        grant_type:
          type: string
          enum:
            - CC
            - AC
          description: 'oauth client grant type; possible values: CC - client credentials,
            AC - authorization code'
        redirect_uri:
          type: string
          description: oauth client redirect URI (only for grant type authorization
            code)
        scopes:
          type: array
          description: oauth client scopes
          items:
            type: string
      xml:
        name: Oauth2ClientPOST
    Oauth2ClientPUT:
      type: object
      properties:
        name:
          type: string
          description: oauth client name (unique in the whole system)
        grant_type:
          type: string
          enum:
            - CC
            - AC
          description: 'oauth client grant type; possible values: CC - client credentials,
            AC - authorization code'
        redirect_uri:
          type: string
          description: oauth client redirect URI (only for grant type authorization
            code)
        scopes:
          type: array
          description: oauth client scopes
          items:
            type: string
      xml:
        name: Oauth2ClientPUT
    Oauth2ClientSecretDELETE:
      type: object
      xml:
        name: Oauth2ClientSecretDELETE
    Oauth2ClientSecretGET:
      required:
        - id
        - identifier
        - secret
      type: object
      properties:
        id:
          type: integer
          description: oauth client id (system id)
        identifier:
          type: string
          description: oauth client identifier (THE CLIENT ID used for authorization)
        secret:
          type: string
          description: oauth client secret  (THE CLIENT SECRET used for authorization)
      xml:
        name: Oauth2ClientSecretGET
    Oauth2ClientSecretPATCH:
      type: object
      xml:
        name: Oauth2ClientSecretPATCH
    Oauth2ClientSecretPOST:
      type: object
      xml:
        name: Oauth2ClientSecretPOST
    Oauth2ClientSecretPUT:
      type: object
      xml:
        name: Oauth2ClientSecretPUT
    Oauth2ConnectedApplicationDELETE:
      type: object
      xml:
        name: Oauth2ConnectedApplicationDELETE
    Oauth2ConnectedApplicationGET:
      required:
        - client_id
        - client_identifier
        - client_name
        - created
        - id
        - last_used
      type: object
      properties:
        id:
          type: integer
          description: application id
        client_id:
          type: integer
          description: oauth client id (system id)
        client_identifier:
          type: string
          description: oauth client identifier (THE CLIENT ID used for authorization)
        client_name:
          type: string
          description: oauth client name
        last_used:
          type: string
          description: when was application las used
          format: date-time
        created:
          type: string
          description: when was application connected
          format: date-time
      xml:
        name: Oauth2ConnectedApplicationGET
    Oauth2ConnectedApplicationPATCH:
      type: object
      xml:
        name: Oauth2ConnectedApplicationPATCH
    Oauth2ConnectedApplicationPOST:
      type: object
      xml:
        name: Oauth2ConnectedApplicationPOST
    Oauth2ConnectedApplicationPUT:
      type: object
      xml:
        name: Oauth2ConnectedApplicationPUT
    ObjectposDELETE:
      type: object
      xml:
        name: ObjectposDELETE
    ObjectposGET:
      required:
        - amount
        - catalog_type
        - description
        - discount_rate
        - discount_type
        - name
        - number
        - price
        - show_only_total
        - total
        - type
        - unit_id
        - vat
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        total:
          type: number
          description: total price
          format: float
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: ObjectposGET
    ObjectposPATCH:
      type: object
      xml:
        name: ObjectposPATCH
    ObjectposPOST:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: 'whether to show only total on invoice - default value: false'
      xml:
        name: ObjectposPOST
    ObjectposPUT:
      required:
        - catalog_type
        - type
      type: object
      properties:
        type:
          type: string
          enum:
            - N
            - T
            - PB
            - H
            - SI
            - SNI
          description: |
            position type; possible values: N - normal, T - text, PB - page break, H - header, SI - subtotal (incremental), SNI - subtotal (non incremental)
        catalog_type:
          type: string
          enum:
            - P
            - S
          description: |
            position catalog type; possible values: P - product, S - service
        number:
          type: string
          description: catalog unique number
        name:
          type: string
          description: name
        description:
          type: string
          description: description
        price:
          type: number
          description: price per unit; required for N type
          format: float
        vat:
          type: number
          description: VAT rate; required for N type
          format: float
        amount:
          type: number
          description: amount; required for N type
          format: float
        unit_id:
          type: integer
          description: id of the unit; required for N type
        discount_rate:
          type: number
          description: optional discount rate
          format: float
        discount_type:
          type: string
          enum:
            - A
            - P
          default: 'P'
          description: |
            optional discount type; possible values: A - amount, P - in %
        show_only_total:
          type: boolean
          description: whether to show only total on invoice
      xml:
        name: ObjectposPUT
    ReceivablesConfigurationIsrDELETE:
      type: object
      xml:
        name: ReceivablesConfigurationIsrDELETE
    ReceivablesConfigurationIsrGET:
      required:
        - bank_address
        - bank_name
#        - created
        - default
        - delivery_number
        - iban
        - id
        - name
        - position
        - recipient_addition
        - recipient_city
        - recipient_name
        - recipient_street
        - subscriber_number
        - type
      type: object
      properties:
        id:
          type: integer
          description: ISR id
        default:
          type: boolean
          description: whether ISR is a default one
        type:
          type: string
          enum:
            - ISR
            - ISR+
            - RIS
          description: |
            possible values:
            ISR - orange inpayment slip,
            ISR+ - orange inpayment slip plus,
            RIS - red inpayment slip
        position:
          type: string
          enum:
            - A
            - F
            - L
          description: |
            possible values:
            A - additional page, F - first page, L - last page
        name:
          type: string
          description: optional ISR name (for internal system use only)
        bank_name:
          type: string
        bank_address:
          type: string
        recipient_name:
          type: string
        recipient_addition:
          type: string
        recipient_street:
          type: string
        recipient_city:
          type: string
        delivery_number:
          type: string
        iban:
          type: string
        subscriber_number:
          type: string
 #       created:
 #         type: string
          description: date that ISR was created
          format: date-time
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ReceivablesConfigurationIsrGET
    ReceivablesConfigurationIsrPATCH:
      type: object
      xml:
        name: ReceivablesConfigurationIsrPATCH
    ReceivablesConfigurationIsrPOST:
      type: object
      xml:
        name: ReceivablesConfigurationIsrPOST
    ReceivablesConfigurationIsrPUT:
      type: object
      xml:
        name: ReceivablesConfigurationIsrPUT
    ReportingCostUnitDELETE:
      type: object
      xml:
        name: ReportingCostUnitDELETE
    ReportingCostUnitGET:
      required:
        - description
        - id
        - name
        - number
        - type
      type: object
      properties:
        id:
          type: integer
          description: cost unit's ID
        number:
          type: string
          description: cost unit's internal number
        name:
          type: string
          description: cost unit's name
        description:
          type: string
          description: cost unit's description
        type:
          type: string
          enum:
            - P
            - U
          description: 'cost unit''s type; one of: [''P'',''U'']'
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ReportingCostUnitGET
    ReportingCostUnitPATCH:
      type: object
      xml:
        name: ReportingCostUnitPATCH
    ReportingCostUnitPOST:
      required:
        - name
        - type
      type: object
      properties:
        number:
          type: string
          description: cost unit's internal number
        name:
          type: string
          description: cost unit's name
        description:
          type: string
          description: cost unit's description
        type:
          type: string
          description: 'cost unit''s type; one of: [''P'',''U'']'
      xml:
        name: ReportingCostUnitPOST
    ReportingCostUnitPUT:
      type: object
      properties:
        number:
          type: string
          description: cost unit's internal number
        name:
          type: string
          description: cost unit's name
        description:
          type: string
          description: cost unit's description
        type:
          type: string
          description: 'cost unit''s type; one of: [''P'',''U'']'
      xml:
        name: ReportingCostUnitPUT
    ReportingEffortDELETE:
      type: object
      xml:
        name: ReportingEffortDELETE
    ReportingEffortGET:
      required:
        - activity_id
        - date
        - duration
        - entity_id
        - entity_type
        - hourly_rate
        - id
        - is_invoiced
        - notes
        - updated
        - user_id
      type: object
      properties:
        id:
          type: integer
          description: effort id
        user_id:
          type: integer
          description: id of user
        user_name:
          type: string
          description: full name of user
        entity_type:
          type: string
          enum:
            - P
            - CU
            - C
          description: 'type of assigned entity, one of: P - project, CU - cost unit,
            C - contact'
        entity_id:
          type: integer
          description: assigned entity id
        duration:
          type: number
          description: duration of effort
          format: float
        date:
          type: string
          description: date
          format: date
        activity_id:
          type: integer
          description: assigned activity id
        activity_name:
          type: string
          description: full activity name
        notes:
          type: string
          description: notes
        is_invoiced:
          type: boolean
          description: if effort has been invoiced already
        updated:
          type: string
          description: updated
          format: date-time
        hourly_rate:
          type: number
          description: hourly rate
          format: float
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ReportingEffortGET
    ReportingEffortPATCH:
      type: object
      xml:
        name: ReportingEffortPATCH
    ReportingEffortPOST:
      required:
        - date
        - duration
        - entity_id
        - entity_type
      type: object
      properties:
        entity_type:
          type: string
          enum:
            - P
            - CU
            - C
          description: 'type of assigned entity, one of: P - project, CU - cost unit,
            C - contact'
        entity_id:
          type: integer
          description: assigned entity id
        duration:
          type: number
          description: duration of effort
          format: float
        date:
          type: string
          description: date
          format: date
        activity_id:
          type: integer
          description: assigned activity id
        notes:
          type: string
          description: notes
        is_invoiced:
          type: boolean
          description: if effort has been invoiced already
        hourly_rate:
          type: number
          description: hourly rate
          format: float
      xml:
        name: ReportingEffortPOST
    ReportingEffortPUT:
      type: object
      properties:
        duration:
          type: number
          description: duration of effort
          format: float
        date:
          type: string
          description: date
          format: date
        activity_id:
          type: integer
          description: assigned activity id
        notes:
          type: string
          description: notes
        is_invoiced:
          type: boolean
          description: if effort has been invoiced already
        hourly_rate:
          type: number
          description: hourly rate
          format: float
      xml:
        name: ReportingEffortPUT
    ReportingProjectDELETE:
      type: object
      xml:
        name: ReportingProjectDELETE
    ReportingProjectGET:
      required:
        - contact_id
        - description
        - hourly_rate
        - hours_estimated
        - id
        - name
        - number
        - start_date
        - status
      type: object
      properties:
        id:
          type: integer
          description: project's ID
        number:
          type: string
          description: project's internal number
        contact_id:
          type: integer
          description: related contact's id
        contact_name:
          type: string
          description: related contact's name
        name:
          type: string
          description: project's name
        description:
          type: string
          description: project's description
        start_date:
          type: string
          description: project's start date
          format: date
        hours_estimated:
          type: number
          description: project's estimated maximum effort (in hours)
          format: float
        hourly_rate:
          type: number
          description: project's hourly rate
          format: float
        status:
          type: string
          enum:
            - O
            - C
            - B
            - P
          description: 'status to be set, on of:  [''O'' - open, ''C'' - closed, ''B''
                    - billed, ''P'' - pending]'

        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: ReportingProjectGET
    ReportingProjectPATCH:
      type: object
      xml:
        name: ReportingProjectPATCH
    ReportingProjectPOST:
      required:
        - contact_id
        - name
        - start_date
      type: object
      properties:
        number:
          type: string
          description: project's internal number
        contact_id:
          type: integer
          description: related contact's id
        name:
          type: string
          description: project's name
        description:
          type: string
          description: project's description
        start_date:
          type: string
          description: project's start date
          format: date
        hours_estimated:
          type: number
          description: project's estimated maximum effort (in hours)
          format: float
        hourly_rate:
          type: number
          description: project's hourly rate
          format: float
      xml:
        name: ReportingProjectPOST
    ReportingProjectPUT:
      type: object
      properties:
        number:
          type: string
          description: project's internal number
        contact_id:
          type: integer
          description: related contact's id
        name:
          type: string
          description: project's name
        description:
          type: string
          description: project's description
        start_date:
          type: string
          description: project's start date
          format: date
        hours_estimated:
          type: number
          description: project's estimated maximum effort (in hours)
          format: float
        hourly_rate:
          type: number
          description: project's hourly rate
          format: float
      xml:
        name: ReportingProjectPUT
    WorkingHoursDELETE:
      type: object
      xml:
        name: WorkingHoursDELETE
    WorkingHoursGET:
      required:
        - created
        - date
        - id
        - time_end
        - time_start
        - user_id
      type: object
      properties:
        id:
          type: integer
          description: working hours id
        user_id:
          type: integer
          description: id of user
        user_name:
          type: string
          description: full name of user
        date:
          type: string
          description: date of working hours time span
          format: date
        time_start:
          pattern: ^\d{2}:\d{2}$
          type: string
          description: start of working hours time span (in HH:MM format)
          example: HH:MM
        time_end:
          pattern: ^\d{2}:\d{2}$
          type: string
          description: end of working hours time span (in HH:MM format)
          example: HH:MM
        created:
          type: string
          description: date when working hours entity was created
          format: date-time
        permissions:
          type: array
          items:
            type: string
            enum:
              - view
              - edit
          description: |
            actions that can be performed on an item (possible values: view, edit)
      xml:
        name: WorkingHoursGET
    WorkingHoursPATCH:
      type: object
      xml:
        name: WorkingHoursPATCH
    WorkingHoursPOST:
      required:
        - date
        - time_end
        - time_start
      type: object
      properties:
        user_id:
          type: integer
          description: 'id of user - default value: ''user id of authenticated request'''
        date:
          type: string
          description: date of working hours time span
          format: date
        time_start:
          pattern: ^\d{2}:\d{2}$
          type: string
          description: start of working hours time span (in HH:MM format)
          example: HH:MM
        time_end:
          pattern: ^\d{2}:\d{2}$
          type: string
          description: end of working hours time span (in HH:MM format)
          example: HH:MM
      xml:
        name: WorkingHoursPOST
    WorkingHoursPUT:
      type: object
      properties:
        user_id:
          type: integer
          description: id of user
        date:
          type: string
          description: date of working hours time span
          format: date
        time_start:
          pattern: ^\d{2}:\d{2}$
          type: string
          description: start of working hours time span (in HH:MM format)
          example: HH:MM
        time_end:
          pattern: ^\d{2}:\d{2}$
          type: string
          description: end of working hours time span (in HH:MM format)
          example: HH:MM
      xml:
        name: WorkingHoursPUT
    ListPagination:
      required:
        - first
        - last
        - page
        - pages
        - total
      type: object
      properties:
        page:
          type: integer
          description: Current page number
        pages:
          type: integer
          description: Total number of pages
        total:
          type: integer
          description: Total number of items
        first:
          type: string
          description: URL to the first page of results
        last:
          type: string
          description: URL to the last page of results
        next:
          type: string
          description: URL to the next page of results, if exists
        previous:
          type: string
          description: URL to the previous page of results, if exists
    ResponseList:
      required:
        - pagination
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/ListPagination'
    Response4xx:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
    Response401meta:
      required:
        - error_type
      type: object
      properties:
        error_type:
          type: string
          description: OAuth error type
        hint:
          type: string
          description: OAuth hint
    Response422metaError:
      required:
        - code
        - key
        - message
      type: object
      properties:
        key:
          type: string
          description: Key of invalid value
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
    Response422meta:
      required:
        - errors
      type: object
      properties:
        errors:
          type: array
          description: Specific validation errors
          items:
            $ref: '#/components/schemas/Response422metaError'
    Response401:
      required:
        - code
        - message
        - meta
      type: object
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
        meta:
          $ref: '#/components/schemas/Response401meta'
    Response402:
      type: object
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
        meta:
          $ref: '#/components/schemas/Response402meta'
    Response402meta:
      required:
        - feature
        - limit
      type: object
      properties:
        feature:
          type: string
          description: feature that limit was reached
        limit:
          type: integer
          description: reached limit value
    Response403:
      type: object
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
        meta:
          $ref: '#/components/schemas/Response403meta'
    Response403meta:
      required:
        - feature
        - plans
      type: object
      properties:
        feature:
          type: string
          description: feature that is missing
        plans:
          type: array
          description: plans that provide missing feature
          items:
            type: string
    Response404meta:
      required:
        - entity_type
      type: object
      properties:
        entity_type:
          type: string
          description: Type of entity that was not found
    Response404:
      required:
        - code
        - message
      type: object
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
        meta:
          $ref: '#/components/schemas/Response404meta'
    Response422:
      required:
        - code
        - message
        - meta
      type: object
      properties:
        code:
          type: integer
          description: Error code
        message:
          type: string
          description: Error message
        meta:
          $ref: '#/components/schemas/Response422meta'
    ResponsePost200:
      required:
        - id
      type: object
      properties:
        id:
          type: integer
          description: New created entity ID.
  responses:
    Response204:
      description: Entity deleted
      content: {}
    Response400:
      description: Bad request
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Response4xx'
    Response401:
      description: Unauthorized
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Response401'
    Response402:
      description: One of feature limits was reached
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Response402'
    Response403:
      description: No permissions for specified entity (no response body) OR feature
        is missing (with response body)
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Response403'
    Response404:
      description: Entity not found
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Response404'
    Response405:
      description: Method not allowed
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Response4xx'
    Response422:
      description: Validation errors
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Response422'
    Response429:
      description: Too many requests
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/Response4xx'
    Response500:
      description: Server error
      content: {}
    ResponseFile:
      description: ok
      content:
        '*/*':
          schema:
            type: string
            format: binary
    ResponsePost200:
      description: ""
      content:
        '*/*':
          schema:
            $ref: '#/components/schemas/ResponsePost200'
  parameters:
    with:
      name: with
      in: query
      description: Comma separated, optional keys that should be included in the response.
      schema:
        type: string
    limit:
      name: limit
      in: query
      description: Limits the number of items returned. Number in a range [1-200]
      schema:
        type: integer
        format: int32
        default: 100
    offset:
      name: offset
      in: query
      description: 'Offset of the first item to return. The offset of the initial
        item is 0. '
      schema:
        type: integer
        format: int32
        default: 0
    q:
      name: q
      in: query
      description: Value for full text search
      schema:
        type: string
    filter:
      name: filter
      in: query
      description: Filter expression (JSON)
      schema:
        type: string
    page:
      name: page
      in: query
      description: page number [1 .. pages amount]
      schema:
        type: integer
        format: int32
        default: 1
    size:
      name: size
      in: query
      description: width in pixels
      schema:
        type: integer
        format: int32
        default: 972
        enum:
          - 240
          - 595
          - 600
          - 972
          - 1240
    id:
      name: id
      in: path
      required: true
      schema:
        type: integer
        format: int32

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    oauth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://api.smallinvoice.com/v2/auth/access-tokens'
          #refreshUrl:
          scopes:
            profile: Profile
            contact: Contacts
            letter: Letters
            catalog: Catalog
            invoice: Invoices
            offer: Offers
            delivery_note: Delivery notes
            order_confirmation: Order confirmations
            project: Projects
            cost_unit: Cost units
            working_hours: Working hours
            activity: Activities
            effort: Efforts
            contact_reminder: Reminder
            configuration: Settings


#        authorizationCode:
#          authorizationUrl: /v2/auth/authorize
#          tokenUrl: /v2/auth/access-tokens
#          scopes:
#            profile: Profile
#            contact: Contacts
#            contact_reminder: Reminders
#            letter: Letters
#            configuration: Settings
#            catalog: Catalog
#            invoice: Invoices
#            offer: Offers
#            delivery_note: Delivery notes
#            order_confirmation: Order confirmations
#            project: Projects
#            cost_unit: Cost units
#            working_hours: Working hours
#            activity: Activities
#            effort: Efforts
